{
    "collab_server" : "",
    "contents" : "## ---- echo=FALSE, warning=FALSE, message=FALSE---------------------------\nrequire(pwr)\nrequire(psych) \nrequire(RColorBrewer)\nrequire(plotrix)\nlibrary(rmcorr)\n\n#install_github('lmarusich/rmcorr')\n\n#require(checkpoint)\n#checkpoint(\"2016-XX-YY\") #Won't work yet b/c rmcorr doesn't yet exist in CRAN\n#require(memoise)\naddalpha <- function(colors, alpha=1.0) {\n    r <- col2rgb(colors, alpha=T)\n    # Apply alpha\n    r[4,] <- alpha*255\n    r <- r/255.0\n    return(rgb(r[1,], r[2,], r[3,], r[4,]))\n}\n\n# colorRampPaletteAlpha()\ncolorRampPaletteAlpha <- function(colors, n=32, interpolate='linear') {\n    # Create the color ramp normally\n    cr <- colorRampPalette(colors, interpolate=interpolate)(n)\n    # Find the alpha channel\n    a <- col2rgb(colors, alpha=T)[4,]\n    # Interpolate\n    if (interpolate=='linear') {\n        l <- approx(a, n=n)\n    } else {\n        l <- spline(a, n=n)\n    }\n    l$y[l$y > 255] <- 255 # Clamp if spline is > 255\n    cr <- addalpha(cr, l$y/255.0)\n    return(cr)\n}\n\n\n## ---- echo = FALSE, warning = FALSE, results =  \"hide\", fig.height = 6, fig.width = 12----\nset.seed(1)\n\ninitX <- rnorm(50)\nnewY <- NULL\nnewX <- NULL\nsub <- rep(1:10, each = 5)\n\nrsq <- .9\n\naddx <- -2\nfor (i in 1:10){\n    addx <- addx + .25\n    tempData <- initX[sub == i] + addx\n    sdx <- sd(tempData)\n    sdnoise <- sdx * (sqrt((1-rsq)/rsq))\n    tempy <- tempData + rnorm(5,0,sdnoise) + rnorm(1,0,3)\n    newY <- c(newY, tempy)\n    newX <- c(newX,tempData)\n}\n\nexampleMat <-data.frame(cbind(sub,newX,newY))\nexample.rmc <- rmcorr(sub,newX,newY,exampleMat)\n\n###standard averaged regression plot\nsubmeanx <- aggregate(exampleMat$newX, by = list(exampleMat$sub), mean)\nsubmeany <- aggregate(exampleMat$newY, by = list(exampleMat$sub), mean)\nmypal <- colorRampPalette(RColorBrewer::brewer.pal(10,'Paired'))\ncols <- mypal(10)\n\npar(mfrow = c(1, 2), mgp = c(2.5, .75, 0), mar = c(4,4,2,1), cex = 1.2)\n\nplot(example.rmc, exampleMat, xlab = \"x\", ylab = \"y\", main = \"a) Rmcorr Plot\",\n     overall = F, palette = mypal, las = 1, ylim = c(-6, 6.5))\ntext(1,-5,paste('rmcorr =', round(example.rmc$r,2),'\\np < 0.001'), adj = 1)\n\nplot(submeanx[,2], submeany[,2], pch = 16, col = cols, las = 1,\n     main = \"b) Regression Plot\", xlab = \"x (averaged for each participant)\",\n     ylab = \"y (averaged for each participant)\", ylim=c(-6,6.5), xlim=c(-3, 1))\nstdr <- cor.test(submeanx[,2], submeany[,2])\ntext(1,-5,paste('r =', round(stdr$est,2),'\\np =', round(stdr$p.value,2)), adj = 1)\nabline(lm(submeany[,2]~submeanx[,2]),col=\"gray50\")\n\ndev.copy(pdf, file=\"plots/Figure1_Rmcorr_vs_reg.pdf\", 9, 6)\ndev.off()\n\n\n## ---- echo = FALSE, warning = FALSE, results = \"hide\", fig.height = 9, fig.width = 9----\npar(mfrow = c(3,3), mar = c(1,1,.5,.5), mgp = c(2.5,.75,0), \n    oma = c(4,4,4,0), cex = 1.1)\n\nmakeminiplot <- function(subxs, sub.slope, intercept, constant=0, xax = \"n\", \n                         yax = \"n\", legend = F){\n    \n    mypal <- colorRampPalette(RColorBrewer::brewer.pal(10,'Paired'))\n    cols <- mypal(3)\n    \n    # cols <- c(\"#A6CEE3\", \"#9D686D\", \"#6A3D9A\")\n    \n    subys <- list(3)\n    for (i in 1:3){\n        subys[[i]] <- subxs[[i]] * sub.slope + intercept*i + constant\n    }\n    \n    plot(subxs[[1]],subys[[1]], type = \"n\", xlim =c(0,4), ylim = c(0,10), \n         xlab = \"\", ylab = \"\", xaxt = xax, yaxt = yax, las = 1)\n    \n    allx <- unlist(subxs)\n    ally <- unlist(subys)\n    abline(lm(ally~allx))\n    \n    for (i in 1:3) {\n        lines(subxs[[i]],subys[[i]], type = \"o\", col = cols[i], pch = 16)\n    }\n    \n    if (legend) legend('bottomright', legend = \"OLS\", lwd = 1.25, bty = \"n\",\n                       cex = 1.05, inset = .01)\n}\n\nsubxs <- list(3)\nsubxs[[1]] <- seq(0,2,.25)\nsubxs[[2]] <- seq(1,3,.25)\nsubxs[[3]] <- seq(2,4,.25)\n\n#ols is positive\nmakeminiplot(subxs, -1, 4, yax = \"s\", legend = T)\nmakeminiplot(subxs, 0, 2.75)\nmakeminiplot(subxs, 1, 1.5)\n\n#ols is flat\nmakeminiplot(subxs, -1.5, 2.45, 3, yax = \"s\")\nmakeminiplot(subxs, 0, 0, 5)\nmakeminiplot(subxs, 1.5, -2.4, 7)\n\n#ols is negative\nmakeminiplot(subxs, -.75, -2, 10, yax = \"s\", xax = \"s\")\nmakeminiplot(subxs, 0, -3.1, 10.9, xax = \"s\")\nmakeminiplot(subxs, .9, -4.6, 12, xax = \"s\")\n\nmtext(side = 1, outer = T, line = 1.5, \"x\", at = c(.175, .5, .85))\nmtext(side = 2, outer = T, line = 1.5, \"y\", at = c(.175, .5, .85), las = 1)\nmtext(side = 3, outer = T, line = .5, \n      c(\"a) rmcorr = -1\", \"b) rmcorr = 0\", \"c) rmcorr = 1\"),\n      at = c(.175, .5, .85), las = 1, cex = 1.5)\n\n\ndev.copy(pdf, file=\"plots/Figure2_Rmcorr_vs_OLS.pdf\", 9, 9)\ndev.off()\n\n\n## ---- echo = FALSE, warning = FALSE, results = \"hide\", fig.height = 6, fig.width = 12----\nset.seed(10)\ninitX <- rnorm(15)\nnewY <- NULL\nnewX <- NULL\nsub <- rep(1:3, each = 5)\nrsq <- .7\naddy <- 4\naddx <- -2\nfor (i in 1:3){\n    addy <- addy - 1\n    addx <- addx + .25\n    \n    tempData <- initX[sub == i] + addx\n    sdx <- sd(tempData)\n    sdnoise <- sdx * (sqrt((1-rsq)/rsq))\n    tempy <- tempData + rnorm(5,0,sdnoise) + rnorm(1,addy,1)\n    newY <- c(newY, tempy)\n    newX <- c(newX,tempData)\n}\n\npar(mfrow=c(1,3), mar = c(4,4,2,2), mgp = c(2.75, .75, 0), cex = 1.2)\n\n###original plot\nexampleMat <-data.frame(cbind(sub,newX,newY))\nexample.rmc <- rmcorr(sub,newX,newY,exampleMat)\n\nmypal <- colorRampPalette(RColorBrewer::brewer.pal(10,'Paired'))\n\nplot(example.rmc, exampleMat, xlab = \"x\", ylab = \"\", main = \"a) Original\",\n     overall = F, palette = mypal, xlim = c(-3.5, 1), ylim = c(-2.5,2), las = 1)\ntext(-3.5,1.75,paste('rmcorr =', round(example.rmc$r,2),'\\np < 0.001'), adj = 0)\nmtext(side = 2, \"y\", las = 1, line = 2.5, cex = 1.2)\n\n###add 1 to all x's, multiply by 2\nexampleMat2 <- exampleMat\nexampleMat2$newX <- exampleMat2$newX * .5 + 1\nexample2.rmc <- rmcorr(sub, newX, newY, exampleMat2)\nplot(example2.rmc, exampleMat2, xlab = \"x\", ylab = \"\", main = \"b) x / 2 + 1\", overall = F,\n     palette = mypal, xlim = c(-3.5, 1), ylim = c(-2.5,2), las = 1)\ntext(-3.5,1.75,paste('rmcorr =', round(example2.rmc$r,2),'\\np < 0.001'), adj = 0)\nmtext(side = 2, \"y\", las = 1, line = 2.5, cex = 1.2)\n\n###just add -2 to sub3's ys\nexampleMat3 <- exampleMat\nexampleMat3$newY[11:15] <- exampleMat3$newY[11:15] - 2\nexample3.rmc <- rmcorr(sub, newX, newY, exampleMat3)\nplot(example3.rmc, exampleMat3, xlab = \"x\", ylab = \"\", main = \"c) Subject 3: y - 2\", overall = F,\n     palette = mypal, xlim = c(-3.5, 1), ylim = c(-2.5,2), las = 1)\ntext(-3.5,1.75,paste('rmcorr =', round(example3.rmc$r,2),'\\np < 0.001'), adj = 0)\nmtext(side = 2, \"y\", las = 1, line = 2.5, cex = 1.2)\n\ndev.copy(pdf, file=\"plots/Figure3_Transformations.pdf\", 12, 6)\ndev.off()\n\n## ---- echo=FALSE, fig.height = 8, fig.width = 8--------------------------\npower.rmcorr<-function(k, N, effectsizer, sig)\n{\n    pwr.r.test(n = ((N)*(k-1))+1, r = effectsizer, sig.level = sig) \n    #df are specified this way because pwr.r.test assumes the input is N, so it uses N - 2 for the df\n}\n\npar(mfrow=c(1,3), cex.lab=1.25, cex.axis=1.25, cex.main=1.25, cex.sub=1.25, mar=c(4.5,4.5,1.75,1))\n\n#Small effect size\nk<-c(3, 5, 10, 20) \nnvals <- seq(6, 300)\npowPearsonSmall <- sapply(nvals, function (x) pwr.r.test(n=x, r=0.1)$power)\n\nbluecolors<-c(\"#c6dbef\", \"#9ecae1\", \"#6baed6\", \"#4292c6\", \"#2171b5\", \"#084594\")\n#bluecols<-brewer.pal(9, \"Blues\")\n#bluecols3<-c(greenscols[6], bluecols[2],bluecols[3],bluecols[5],bluecols[7],bluecols[9])\n\n\n\nplot(nvals, seq(0,1, length.out=length(nvals)), \n     main = expression(bold(\"a)\")~bolditalic('r'[rm])~bold(and)~bolditalic(r)~bold('=')~ bold('0.10')), \n     xlab=expression(Sample~Size~\"(\"*italic('N')*\")\"),\n     yaxt = \"n\", ylab = \"Power\", las = 1, col = \"white\", \n     xlim=c(0,300))\n\nyLabels <- seq(0, 1, 0.2)\naxis(2, at=yLabels, labels=sprintf(round(100*yLabels), fmt=\"%2.0f%%\"), las=1, cex.sub = 2)\n\nfor (i in 1:4) \n{\n    powvals <- sapply(nvals, function (x) power.rmcorr(k[i], x, 0.1, 0.05)$power)\n    lines(nvals, powvals, lwd=2.5, col=bluecolors[i+1])\n}\nlegend(\"bottomright\", lwd=2.5, col=bluecolors, bty= 'n', legend=c(\"1\", \"3\", \"5\", \"10\", \"20\"), title = expression(italic('k')),\n       cex = 1.2)\nlines(nvals, powPearsonSmall, col=bluecolors[1], lwd= 2.5)\nabline(a = 0.8, b=0, col=1, lty=2, lwd= 2.5)\n\n#Medium effect size\nk<-c(3, 5, 10, 20)\nnvals <- seq(6, 50)\npowPearsonMedium <- sapply(nvals, function (x) pwr.r.test(n=x, r=0.3)$power)\ngreencolors<-c(\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#005a32\")\n\n#orangecols<-brewer.pal(9, \"Oranges\")\n#orangecols3<-c(orangecols[2],orangecols[3],orangecols[5],orangecols[7],orangecols[9])\n\nplot(nvals, seq(0,1, length.out=length(nvals)), \n     main = expression(bold(\"b)\")~bolditalic('r'[rm])~bold(and)~bolditalic(r)~bold('=')~ bold('0.30')), \n     xlab=expression(Sample~Size~\"(\"*italic('N')*\")\"),\n     yaxt = \"n\", ylab = \"Power\", las = 1, col = \"white\", \n     xlim=c(0,50))\n\nyLabels <- seq(0, 1, 0.2)\naxis(2, at=yLabels, main = \"Power\", labels=sprintf(round(100*yLabels), fmt=\"%2.0f%%\"), las=1)\n\nfor (i in 1:4) \n{\n    powvals <- sapply(nvals, function (x) power.rmcorr(k[i], x, 0.3, 0.05)$power)\n    lines(nvals, powvals, lwd=2.5, col=greencolors[i+1])\n}\nlegend(\"bottomright\", lwd=2, col=greencolors, bty = 'n', legend=c(\"1\", \"3\", \"5\", \"10\", \"20\"), title = expression(italic('k')),\n       cex = 1.2)\nlines(nvals, powPearsonMedium, col=greencolors[1], lwd = 2.5)\nabline(a = 0.8, b=0, col=1, lty=2, lwd= 2.5)\n\n#Large effect size\nk<-c(3, 5, 10, 20)\nnvals <- seq(6, 30)\npowPearsonlarge <- sapply(nvals, function (x) pwr.r.test(n=x, r=0.5)$power)\n\npurplecolors<-c(\"#f2f0f7\", \"#dadaeb\", \"#bcbddc\", \"#9e9ac8\", \"#807dba\", \"#6a51a3\", \"#4a1486\")\n\nplot(nvals, seq(0,1, length.out=length(nvals)), \n     main = expression(bold(\"c)\")~bolditalic('r'[rm])~bold(and)~bolditalic(r)~bold('=')~ bold('0.50')),\n     xlab=expression(Sample~Size~\"(\"*italic('N')*\")\"),\n     yaxt = \"n\", ylab = \"Power\", las = 1, col = \"white\", xlim=c(0,30))\nyLabels <- seq(0, 1, 0.2)\naxis(2, at=yLabels, main = \"Power\", labels=sprintf(round(100*yLabels), fmt=\"%2.0f%%\"), las=1)\n\nfor (i in 1:4) \n{\n    powvals <- sapply(nvals, function (x) power.rmcorr(k[i], x, 0.5, 0.05)$power)\n    lines(nvals, powvals, lwd=2.5, col=purplecolors[i+2])\n}\nlegend(\"bottomright\", lwd=2, col=purplecolors, legend=c(\"1\", \"3\", \"5\", \"10\", \"20\"), bty = 'n', title = expression(italic('k')),\n       cex = 1.2)\nabline(a = 0.8, b=0, col=1, lty=2, lwd= 2.5)\nlines(nvals, powPearsonlarge, col=purplecolors[2], lwd = 2.5)\n\ndev.copy(pdf, file=\"plots/Figure4_Power_curves.pdf\", 8, 8)\ndev.off()\n\n\n## ---- echo=FALSE---------------------------------------------------------\n#Note for details on Raz: Data captured from Figure 8, Cerebellar Hemispheres (lower right)\n#a) Reproduce correlations in the paper: Cross-sectional (correlation at Time 1)\nTime1raz2005<-subset(raz2005, Time == 1)\nTime2raz2005<-subset(raz2005, Time == 2)\na1.rtest <- cor.test(Time1raz2005$Age, Time1raz2005$Volume) \na2.rtest <- cor.test(Time2raz2005$Age, Time2raz2005$Volume)\n\na1.lm <- lm(Time1raz2005$Volume ~ Time1raz2005$Age)\na2.lm <- lm(Time2raz2005$Volume ~ Time2raz2005$Age)\n\n#b) rmcorr analysis\nbrainvolage.rmc <- rmcorr(participant = Participant, measure1 = Age, measure2 = Volume, dataset = raz2005)\nprint(brainvolage.rmc)\n\n#c) simple regression on averaged data\n\navgRaz2005 <- aggregate(raz2005[,3:4], by = list(raz2005$Participant), mean)\navg.lm <- lm(Volume~Age, data = avgRaz2005)\nc.rtest <- cor.test(avgRaz2005$Age, avgRaz2005$Volume)\nprint(c.rtest)\n\n#d) simple regression on aggregated data (incorrect)\n\nbrainvolage.lm<-lm(Volume~Age, data = raz2005)\nprint(brainvolage.lm)\n\nd.rtest <- cor.test(raz2005$Age, raz2005$Volume)\nprint(d.rtest)\n\n\n## ---- echo=FALSE, fig.width = 9, fig.height = 6--------------------------\n\nlayout(matrix(c(1,3,4,2,3,4), 2, 3, byrow = T))\n\n#a\npar(mar = c(1,4,4,2), oma = c(0,2,0,0), las = 1)\nplot(Volume ~ Age, data = Time1raz2005, pch = 16,  xlab = \"\", ylab = \"\",\n     xlim = c(15,85), ylim = c(105,170), xaxt = \"n\",\n     main = 'a) Separate Simple\\nRegression/Correlations')\nabline(a1.lm, col = \"red\", lwd = 2)\naxis.break(axis = 2, style = \"slash\")\ntext(75, 170, \"Time 1\", cex = 1.5)\ntext(18,107,paste('r =', round(a1.rtest$est,2),'\\np < 0.01'), adj = 0)\n\npar(mar = c(4,4,1,2))\nplot(Volume ~ Age, data = Time2raz2005, pch = 16, ylab = \"\",\n     xlim = c(15,85), ylim = c(105,170))\nabline(a2.lm, col = \"red\", lwd = 2)\naxis.break(axis = 2, style = \"slash\")\ntext(75, 170, \"Time 2\", cex = 1.5)\ntext(18,107,paste('r =', round(a2.rtest$est,2),'\\np < 0.001'), adj = 0)\nmtext(side = 2, expression(Cerebellar~Hemisphere~Volume~(cm^{3})), cex = .7,\n      outer = T, line = -1, las = 0)\n\n#b\npar(mar = c(4,3,4,2))\nblueset <- brewer.pal(8, 'Blues')\npal <- colorRampPalette(blueset)\nplot(brainvolage.rmc, raz2005, overall = F, palette = pal, ylab = \"\", xlab = \"Age\", \n     cex = 1.2, xlim = c(15,85), ylim = c(105,170), main = 'b) Rmcorr') \naxis.break(axis = 2, style = \"slash\")\ntext(20,107,paste('rmcorr =', round(brainvolage.rmc$r,2),'\\np < 0.001'), adj = 0)\n\n#c\nplot(Volume~Age, data = avgRaz2005, ylab = \"\", xlab = \"Age\", cex = 1.2, pch = 16, \n     main = (\"c) Simple Regression/\\nCorrelation (Averaged Data)\"),\n     xlim = c(15,85), ylim = c(105,170))\nabline(brainvolage.lm, col = \"red\", lwd = 2)\naxis.break(axis = 2, style = \"slash\")\ntext(20,107,paste('r =', round(c.rtest$est,2),'\\np < 0.001'), adj = 0)\n\ndev.copy(pdf, file=\"plots/Figure5_Volume_Age.pdf\", 9, 6)\ndev.off()\n\n\n## ---- echo=FALSE---------------------------------------------------------\n#a - rmcorr\nvissearch.rmc <- rmcorr(participant = sub, measure1 = rt, measure2 = acc, dataset = gilden2010)\nprint(vissearch.rmc)\n\n#b - averaged data\ngildenMeans <- aggregate(gilden2010[,3:4], by = list(gilden2010$sub), mean)\navg.lm <- lm(acc ~ rt, data = gildenMeans)\nprint(avg.lm)\nb.rtest <- cor.test(gildenMeans$rt, gildenMeans$acc)\nprint(b.rtest)\n\n#c - aggregated data (treated as independent)\nagg.lm <- lm(acc ~ rt, data = gilden2010)\nprint(agg.lm)\nc.rtest <- cor.test(gilden2010$rt, gilden2010$acc)\nprint(c.rtest)\n\n## ---- echo=FALSE, fig.width = 9, fig.height = 6--------------------------\npar(mfrow=c(1,3), mar=c(5,4.6,4,0.5), mgp=c(3.2,0.8,0),  oma = c(0, 0, 0, 0), las = 1)\n\nplot(vissearch.rmc, gilden2010, overall = F, xlab = \"Reaction Time (seconds)\", \n     ylab = \"Accuracy\", cex = 1.2, main = expression(bold(\"a)\")~bold('Rmcorr')),\n     ylim = c(.79, 1), xlim = c(0.45, .95)) \naxis.break(axis = 1, style = \"slash\")\naxis.break(axis = 2, style = \"slash\")\ntext(.95,.8,paste('rmcorr =', round(vissearch.rmc$r,2),'\\np =',\n                  round(vissearch.rmc$p, 2)), adj = 1)\n\nplot(acc~rt, data = gildenMeans, cex = 1.2, pch = 16, ylim = c(.79, 1), \n     xlim = c(0.45, .95), xlab = \"Reaction Time (seconds)\",  ylab = \"\", \n     main = (\"b) Simple Regression\\n(Averaged Data)\"))\nabline(avg.lm, col = \"red\", lwd = 2)\naxis.break(axis = 1, style = \"slash\")\naxis.break(axis = 2, style = \"slash\")\ntext(.95,.8,paste('r =', round(b.rtest$est,2),'\\np =', round(b.rtest$p.value,2)), adj = 1)\n\nplot(acc~rt, data = gilden2010, xlab = \"Reaction Time (seconds)\", ylab = \"\",\n     cex = 1.2, pch = 16, ylim = c(.79, 1), xlim = c(0.45, .95),\n     main = (\"c) Simple Regression\\n(Aggregated Data)\"))\nabline(agg.lm, col = \"red\", lwd = 2)\naxis.break(axis = 1, style = \"slash\")\naxis.break(axis = 2, style = \"slash\")\ntext(.95,.8,paste('r =', round(c.rtest$est,2),'\\np =', round(c.rtest$p.value,2)), adj = 1)\n\ndev.copy(pdf, file=\"plots/Figure6_Visual_Search.pdf\", 9, 6)\ndev.off()\n\n\n## ---- echo=FALSE---------------------------------------------------------\nk<-2\nnvals <- seq(8, 250)\npowPearsonLarge <- sapply(nvals, function (x) pwr.r.test(n=x, r=0.5)$power)\n#bluecolors<-c(\"#c6dbef\", \"#9ecae1\")\n\npar(mfrow=c(1,1), cex.lab=1.1, cex.axis=1.1, cex.main=1.2, cex.sub=1.2)\nAppendFig1<-plot(nvals, seq(0,1, length.out=length(nvals)), \n                 xlab=\"Sample Size\", yaxt = \"n\", ylab = paste(\"Power Difference:\",  \"Rmcorr (k = 2)\", \" -\", \" Pearson correlation\"), las = 1, col = \"white\", xlim=c(0,250), ylim=c(0,0.05))\nyLabels <- seq(0, 0.2, 0.01)\naxis(2, at=yLabels, labels=sprintf(round(100*yLabels), fmt=\"%2.0f%%\"), las=1, cex.sub = 2)\n\npowvals <- sapply(nvals, function (x) power.rmcorr(k[1], x, 0.5, 0.05)$power)\npowvalsdiff<-as.numeric(powvals) - as.numeric(powPearsonLarge)\nlines(nvals, powvalsdiff, lwd=2.5, col=\"red\")\n\ndev.copy(pdf, file=\"plots/AppendixA_Figure.pdf\", 9, 6) \ndev.off()\n\n",
    "created" : 1503421550308.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4044336037",
    "id" : "A6B02C2D",
    "lastKnownWriteTime" : 1503319595,
    "last_content_update" : 1503319595,
    "path" : "C:/Users/Laura Cooper/Desktop/Need from Laptop/rmcorr package/rmcorr/vignettes/Paper_figures.R",
    "project_path" : "vignettes/Paper_figures.R",
    "properties" : {
    },
    "relative_order" : 11,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}