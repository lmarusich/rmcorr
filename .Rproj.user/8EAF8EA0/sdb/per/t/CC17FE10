{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Reproduce results of rmcorr paper\"\nauthor: \"Jon Bakdash and Laura Marusich\"\ndate: \"June 21, 2016\"\noutput: html_document\n---\n\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE}\nrequire(pwr)\nrequire(psych) \nrequire(Hmisc)\nrequire(RColorBrewer)\nrequire(grDevices)\nrequire(plotrix)\nrequire(metafor)\nlibrary(rmcorr)\nrequire(devtools) #Comment out in final version\nrequire(lme4)\nrequire(AICcmodavg)\nrequire(MuMIn)\n#install_github('lmarusich/rmcorr')\n\n#require(checkpoint)\n#checkpoint(\"2016-XX-YY\") #Won't work yet b/c rmcorr doesn't yet exist in CRAN\n#require(memoise)\naddalpha <- function(colors, alpha=1.0) {\n  r <- col2rgb(colors, alpha=T)\n  # Apply alpha\n  r[4,] <- alpha*255\n  r <- r/255.0\n  return(rgb(r[1,], r[2,], r[3,], r[4,]))\n}\n\n# colorRampPaletteAlpha()\ncolorRampPaletteAlpha <- function(colors, n=32, interpolate='linear') {\n  # Create the color ramp normally\n  cr <- colorRampPalette(colors, interpolate=interpolate)(n)\n  # Find the alpha channel\n  a <- col2rgb(colors, alpha=T)[4,]\n  # Interpolate\n  if (interpolate=='linear') {\n    l <- approx(a, n=n)\n  } else {\n    l <- spline(a, n=n)\n  }\n  l$y[l$y > 255] <- 255 # Clamp if spline is > 255\n  cr <- addalpha(cr, l$y/255.0)\n  return(cr)\n}\n\n```\n\n###1. Figure 1: rmcorr and reg plot\n```{r, echo = FALSE, warning = FALSE, results =  \"hide\", fig.height = 6, fig.width = 12}\nset.seed(1)\n\ninitX <- rnorm(50)\nnewY <- NULL\nnewX <- NULL\nsub <- rep(1:10, each = 5)\n\nrsq <- .9\n\naddx <- -2\nfor (i in 1:10){\n    addx <- addx + .25\n    tempData <- initX[sub == i] + addx\n    sdx <- sd(tempData)\n    sdnoise <- sdx * (sqrt((1-rsq)/rsq))\n    tempy <- tempData + rnorm(5,0,sdnoise) + rnorm(1,0,3)\n    newY <- c(newY, tempy)\n    newX <- c(newX,tempData)\n}\n\nexampleMat <-data.frame(cbind(sub,newX,newY))\nexample.rmc <- rmcorr(sub,newX,newY,exampleMat)\n\n###standard averaged regression plot\nsubmeanx <- aggregate(exampleMat$newX, by = list(exampleMat$sub), mean)\nsubmeany <- aggregate(exampleMat$newY, by = list(exampleMat$sub), mean)\nmypal <- colorRampPalette(RColorBrewer::brewer.pal(10,'Paired'))\ncols <- mypal(10)\n\npar(mfrow = c(1, 2), mgp = c(2.5, .75, 0), mar = c(4,4,2,1), cex = 1.2)\n\nplot(example.rmc, exampleMat, xlab = \"x\", ylab = \"y\", main = \"a) Rmcorr Plot\",\n     overall = F, palette = mypal, las = 1, ylim = c(-6, 6.5))\ntext(1,-5,paste('rmcorr =', round(example.rmc$r,2),'\\np < 0.001'), adj = 1)\n\nplot(submeanx[,2], submeany[,2], pch = 16, col = cols, las = 1,\n     main = \"b) Regression Plot\", xlab = \"x (averaged for each participant)\",\n     ylab = \"y (averaged for each participant)\", ylim=c(-6,6.5), xlim=c(-3, 1))\nstdr <- cor.test(submeanx[,2], submeany[,2])\ntext(1,-5,paste('r =', round(stdr$est,2),'\\np =', round(stdr$p.value,2)), adj = 1)\nabline(lm(submeany[,2]~submeanx[,2]),col=\"gray50\")\n\ndev.copy(pdf, file=\"plots/Figure1_Rmcorr_vs_reg.pdf\", 9, 6)\ndev.off()\n\n```\n\n###2. Figure 2: rmcorr w/data transformations\n```{r, echo = FALSE, warning = FALSE, results = \"hide\", fig.height = 6, fig.width = 12}\nset.seed(10)\ninitX <- rnorm(15)\nnewY <- NULL\nnewX <- NULL\nsub <- rep(1:3, each = 5)\nrsq <- .7\naddy <- 4\naddx <- -2\nfor (i in 1:3){\n  addy <- addy - 1\n  addx <- addx + .25\n  \n  tempData <- initX[sub == i] + addx\n  sdx <- sd(tempData)\n  sdnoise <- sdx * (sqrt((1-rsq)/rsq))\n  tempy <- tempData + rnorm(5,0,sdnoise) + rnorm(1,addy,1)\n  newY <- c(newY, tempy)\n  newX <- c(newX,tempData)\n}\n\npar(mfrow=c(1,3), mar = c(4,4,2,2), mgp = c(2.75, .75, 0), cex = 1.2)\n\n###original plot\nexampleMat <-data.frame(cbind(sub,newX,newY))\nexample.rmc <- rmcorr(sub,newX,newY,exampleMat)\n\nmypal <- colorRampPalette(RColorBrewer::brewer.pal(10,'Paired'))\ncols <- mypal(10)\n\nplot(example.rmc, exampleMat, xlab = \"x\", ylab = \"\", main = \"a) Original\",\n     overall = F, palette = mypal, xlim = c(-3.5, 1), ylim = c(-2.25,2), las = 1)\ntext(-3.5,1.75,paste('rmcorr =', round(example.rmc$r,2),'\\np < 0.001'), adj = 0)\nmtext(side = 2, \"y\", las = 1, line = 2.5, cex = 1.2)\n\n###add 1 to all x's, multiply by 2\nexampleMat2 <- exampleMat\nexampleMat2$newX <- exampleMat2$newX * .5 + 1\nexample2.rmc <- rmcorr(sub, newX, newY, exampleMat2)\nplot(example2.rmc, exampleMat2, xlab = \"x\", ylab = \"\", main = \"b) x / 2 + 1\", overall = F,\n     palette = mypal, xlim = c(-3.5, 1), ylim = c(-2.25,2), las = 1)\ntext(-3.5,1.75,paste('rmcorr =', round(example2.rmc$r,2),'\\np < 0.001'), adj = 0)\nmtext(side = 2, \"y\", las = 1, line = 2.5, cex = 1.2)\n\n###just add -2 to sub3's ys\nexampleMat3 <- exampleMat\nexampleMat3$newY[11:15] <- exampleMat3$newY[11:15] - 2\nexample3.rmc <- rmcorr(sub, newX, newY, exampleMat3)\nplot(example3.rmc, exampleMat3, xlab = \"x\", ylab = \"\", main = \"c) Subject 3: y - 2\", overall = F,\n     palette = mypal, xlim = c(-3.5, 1), ylim = c(-2.25,2), las = 1)\ntext(-3.5,1.75,paste('rmcorr =', round(example3.rmc$r,2),'\\np < 0.001'), adj = 0)\nmtext(side = 2, \"y\", las = 1, line = 2.5, cex = 1.2)\n\ndev.copy(pdf, file=\"plots/Figure2_Transformations.pdf\", 12, 6)\ndev.off()\n```\n\n###3. Figure 3: rmcorr vs OLS reg\n```{r, echo = FALSE, warning = FALSE, results = \"hide\", fig.height = 9, fig.width = 9}\npar(mfrow = c(3,3), mar = c(1,1,.5,.5), mgp = c(2.5,.75,0), \n    oma = c(4,4,4,0), cex = 1.1)\n\nmakeminiplot <- function(subxs, sub.slope, intercept, constant=0, xax = \"n\", \n                         yax = \"n\", legend = F){\n  \n  mypal <- colorRampPalette(RColorBrewer::brewer.pal(3,'Set1'))\n  cols <- mypal(3)\n  \n  subys <- list(3)\n  for (i in 1:3){\n    subys[[i]] <- subxs[[i]] * sub.slope + intercept*i + constant\n  }\n  \n  plot(subxs[[1]],subys[[1]], type = \"n\", xlim =c(0,4), ylim = c(0,10), \n       xlab = \"\", ylab = \"\", xaxt = xax, yaxt = yax, las = 1)\n  \n  allx <- unlist(subxs)\n  ally <- unlist(subys)\n  abline(lm(ally~allx))\n  \n  for (i in 1:3) {\n    lines(subxs[[i]],subys[[i]], type = \"o\", col = cols[i], pch = 16)\n  }\n  \n  if (legend) legend('bottomright', legend = \"OLS\", lwd = 1.25, bty = \"n\",\n                     cex = 1.05, inset = .01)\n}\n\nsubxs <- list(3)\nsubxs[[1]] <- seq(0,2,.25)\nsubxs[[2]] <- seq(1,3,.25)\nsubxs[[3]] <- seq(2,4,.25)\n\n#ols is positive\nmakeminiplot(subxs, -1, 4, yax = \"s\", legend = T)\nmakeminiplot(subxs, 0, 2.75)\nmakeminiplot(subxs, 1, 1.5)\n\n#ols is flat\nmakeminiplot(subxs, -1.5, 2.45, 3, yax = \"s\")\nmakeminiplot(subxs, 0, 0, 5)\nmakeminiplot(subxs, 1.5, -2.4, 7)\n\n#ols is negative\nmakeminiplot(subxs, -.75, -2, 10, yax = \"s\", xax = \"s\")\nmakeminiplot(subxs, 0, -3.1, 10.9, xax = \"s\")\nmakeminiplot(subxs, .9, -4.6, 12, xax = \"s\")\n\nmtext(side = 1, outer = T, line = 1.5, \"x\", at = c(.175, .5, .85))\nmtext(side = 2, outer = T, line = 1.5, \"y\", at = c(.175, .5, .85), las = 1)\nmtext(side = 3, outer = T, line = .5, \n      c(\"a) rmcorr = -1\", \"b) rmcorr = 0\", \"c) rmcorr = 1\"),\n      at = c(.175, .5, .85), las = 1, cex = 1.5)\n\n\ndev.copy(pdf, file=\"plots/Figure3_Rmcorr_vs_OLS.pdf\", 9, 9)\ndev.off()\n\n```\n\n###4. Figure 4: Power curves \n```{r, echo=FALSE, fig.height = 8, fig.width = 8}\npower.rmcorr<-function(k, N, effectsizer, sig)\n{\n  pwr.r.test(n = ((N)*(k-1))+1, r = effectsizer, sig.level = sig) \n  #df are specified this way because pwr.r.test assumes the input is N, so it uses N - 2 for the df\n}\n\npar(mfrow=c(1,3), cex.lab=1.25, cex.axis=1.25, cex.main=1.25, cex.sub=1.25, mar=c(4.5,4.5,1.75,1))\n\n#Small effect size\nk<-c(3, 5, 10, 20) \nnvals <- seq(6, 300)\npowPearsonSmall <- sapply(nvals, function (x) pwr.r.test(n=x, r=0.1)$power)\n\nbluecolors<-c(\"#c6dbef\", \"#9ecae1\", \"#6baed6\", \"#4292c6\", \"#2171b5\", \"#084594\")\n#bluecols<-brewer.pal(9, \"Blues\")\n#bluecols3<-c(greenscols[6], bluecols[2],bluecols[3],bluecols[5],bluecols[7],bluecols[9])\n\n\n\nplot(nvals, seq(0,1, length.out=length(nvals)), \n     main = expression(bold(\"a)\")~bolditalic('r'[rm])~bold(and)~bolditalic(r)~bold('=')~ bold('0.10')), \n     xlab=expression(Sample~Size~\"(\"*italic('N')*\")\"),\n     yaxt = \"n\", ylab = \"Power\", las = 1, col = \"white\", \n     xlim=c(0,300))\n\nyLabels <- seq(0, 1, 0.2)\naxis(2, at=yLabels, labels=sprintf(round(100*yLabels), fmt=\"%2.0f%%\"), las=1, cex.sub = 2)\n\nfor (i in 1:4) \n{\n  powvals <- sapply(nvals, function (x) power.rmcorr(k[i], x, 0.1, 0.05)$power)\n  lines(nvals, powvals, lwd=2.5, col=bluecolors[i+1])\n}\nlegend(\"bottomright\", lwd=2.5, col=bluecolors, bty= 'n', legend=c(\"1\", \"3\", \"5\", \"10\", \"20\"), title = expression(italic('k')),\n       cex = 1.2)\nlines(nvals, powPearsonSmall, col=bluecolors[1], lwd= 2.5)\nabline(a = 0.8, b=0, col=1, lty=2, lwd= 2.5)\n\n#Medium effect size\nk<-c(3, 5, 10, 20)\nnvals <- seq(6, 50)\npowPearsonMedium <- sapply(nvals, function (x) pwr.r.test(n=x, r=0.3)$power)\ngreencolors<-c(\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#005a32\")\n\n#orangecols<-brewer.pal(9, \"Oranges\")\n#orangecols3<-c(orangecols[2],orangecols[3],orangecols[5],orangecols[7],orangecols[9])\n\nplot(nvals, seq(0,1, length.out=length(nvals)), \n     main = expression(bold(\"b)\")~bolditalic('r'[rm])~bold(and)~bolditalic(r)~bold('=')~ bold('0.30')), \n     xlab=expression(Sample~Size~\"(\"*italic('N')*\")\"),\n     yaxt = \"n\", ylab = \"Power\", las = 1, col = \"white\", \n     xlim=c(0,50))\n\nyLabels <- seq(0, 1, 0.2)\naxis(2, at=yLabels, main = \"Power\", labels=sprintf(round(100*yLabels), fmt=\"%2.0f%%\"), las=1)\n\nfor (i in 1:4) \n{\n  powvals <- sapply(nvals, function (x) power.rmcorr(k[i], x, 0.3, 0.05)$power)\n  lines(nvals, powvals, lwd=2.5, col=greencolors[i+1])\n}\nlegend(\"bottomright\", lwd=2, col=greencolors, bty = 'n', legend=c(\"1\", \"3\", \"5\", \"10\", \"20\"), title = expression(italic('k')),\n       cex = 1.2)\nlines(nvals, powPearsonMedium, col=greencolors[1], lwd = 2.5)\nabline(a = 0.8, b=0, col=1, lty=2, lwd= 2.5)\n\n#Large effect size\nk<-c(3, 5, 10, 20)\nnvals <- seq(6, 30)\npowPearsonlarge <- sapply(nvals, function (x) pwr.r.test(n=x, r=0.5)$power)\n\npurplecolors<-c(\"#f2f0f7\", \"#dadaeb\", \"#bcbddc\", \"#9e9ac8\", \"#807dba\", \"#6a51a3\", \"#4a1486\")\n\nplot(nvals, seq(0,1, length.out=length(nvals)), \n     main = expression(bold(\"c)\")~bolditalic('r'[rm])~bold(and)~bolditalic(r)~bold('=')~ bold('0.50')),\n     xlab=expression(Sample~Size~\"(\"*italic('N')*\")\"),\n     yaxt = \"n\", ylab = \"Power\", las = 1, col = \"white\", xlim=c(0,30))\nyLabels <- seq(0, 1, 0.2)\naxis(2, at=yLabels, main = \"Power\", labels=sprintf(round(100*yLabels), fmt=\"%2.0f%%\"), las=1)\n\nfor (i in 1:4) \n{\n  powvals <- sapply(nvals, function (x) power.rmcorr(k[i], x, 0.5, 0.05)$power)\n  lines(nvals, powvals, lwd=2.5, col=purplecolors[i+2])\n}\nlegend(\"bottomright\", lwd=2, col=purplecolors, legend=c(\"1\", \"3\", \"5\", \"10\", \"20\"), bty = 'n', title = expression(italic('k')),\n       cex = 1.2)\nabline(a = 0.8, b=0, col=1, lty=2, lwd= 2.5)\nlines(nvals, powPearsonlarge, col=purplecolors[2], lwd = 2.5)\n\ndev.copy(pdf, file=\"plots/Figure4_Power_curves.pdf\", 8, 8)\ndev.off()\n\n```\n###5. Brain volume and age rmcorr and simple reg/cor results and Figure 5\n#### a) rmcorr and simple reg results\n```{r, echo=FALSE}\n#Note for details on Raz: Data captured from Figure 8, Cerebellar Hemispheres (lower right)\nbrainvolage.rmc <- rmcorr(participant = Participant, measure1 = Age, measure2 = Volume, dataset = raz2005)\nprint(brainvolage.rmc)\n\nbrainvolage.lm<-lm(Volume~Age, data = raz2005)\nprint(brainvolage.lm)\n\ncor.test(raz2005$Age, raz2005$Volume)\n\n#Reproduce correlations in the paper: Cross-sectional (correlation at Time 1)\nTime1raz2005<-subset(raz2005, Time == 1)\nTime2raz2005<-subset(raz2005, Time == 2)\n\ncor.test(Time1raz2005$Age, Time1raz2005$Volume) #Table 4, second row from the bottom (CBH T1)\n\n\nChangeraz2005<-(Time2raz2005-Time1raz2005)\ncor.test(Changeraz2005$Age, Changeraz2005$Volume) #Table 4, last row (Change)\n  \n#Not in Raz paper, correlation between age and volume at Time 2\n  cor.test(Time2raz2005$Age, Time2raz2005$Volume)\n\n```\n\n#### b) Figure 5: Brain vol + age, rmcorr and simple reg/cor\n```{r, echo=FALSE, fig.width = 9, fig.height = 6}\n\npar(mfrow=c(1,2), mar=c(5,4.6,4,0.5), mgp=c(3.2,0.8,0),  oma = c(0, 0, 0, 0), las = 1)\n\n\nblueset <- brewer.pal(8, 'Blues')\npal <- colorRampPalette(blueset)\nplot(brainvolage.rmc, raz2005, overall = F, palette = pal, ylab = expression(Cerebellar~Hemisphere~Volume~(cm^{3})), xlab = \"Age\", cex = 1.2, \n     main = expression(bold(\"a)\")~bold('Rmcorr'))) \naxis.break(axis = 2, style = \"slash\")\n\nplot(Volume~Age, data = raz2005, ylab = expression(Cerebellar~Hemisphere~Volume~(cm^{3})), xlab = \"Age\", cex = 1.2, pch = 16,\n     main = (\"b) Simple Regression/\\nCorrelation\"))\nabline(brainvolage.lm, col = \"red\", lwd = 2)\naxis.break(axis = 2, style = \"slash\")\n\ndev.copy(pdf, file=\"plots/Figure5_Volume_Age.pdf\", 9, 6)\ndev.off()\n\n```\n\n###6. Visual search rmcorr and simple reg/cor results and Figure 6\n#### a) rmcorr and simple reg results\n```{r, echo=FALSE}\nvissearch.rmc <- rmcorr(participant = sub, measure1 = rt, measure2 = acc, dataset = gilden2010)\nprint(vissearch.rmc)\n\nvissearch.lm<-lm(acc~rt, data = gilden2010)\nprint(vissearch.lm)\n\ncor.test(gilden2010$rt, gilden2010$acc)\n```\n\n\n#### b) Figure 6: Visual search rmcorr and simple reg/cor\n```{r, echo=FALSE, fig.width = 9, fig.height = 6}\n\npar(mfrow=c(1,2), mar=c(5,4.6,4,0.5), mgp=c(3.2,0.8,0),  oma = c(0, 0, 0, 0), las = 1)\n\nplot(vissearch.rmc, gilden2010, overall = F, xlab = \"Reaction Time (seconds)\", ylab = \"Accuracy\", cex = 1.2, \n     main = expression(bold(\"a)\")~bold('Rmcorr'))) \naxis.break(axis = 1, style = \"slash\")\naxis.break(axis = 2, style = \"slash\")\n\nplot(acc~rt, data = gilden2010, xlab = \"Reaction Time (seconds)\", ylab = \"Accuracy\", cex = 1.2, pch = 16,\n     main = (\"b) Simple Regression/\\nCorrelation\"))\nabline(vissearch.lm, col = \"red\", lwd = 2)\naxis.break(axis = 1, style = \"slash\")\naxis.break(axis = 2, style = \"slash\")\n\ndev.copy(pdf, file=\"plots/Figure6_Visual_Search.pdf\", 9, 6)\ndev.off()\n\n```\n\n###7. Complete pooling examples (fit a single model to all data points) using regression: Size and Distance\n##### a) Regression Results \n```{r, echo = FALSE}\nSizeDistPoolAll.lm<-lm(Emmert_distance_meters~Perceived_dist, data = Size_distance)\nprint(SizeDistPoolAll.lm)\nsummary(SizeDistPoolAll.lm)\ncor.test(Size_distance$Emmert_distance_meters, Size_distance$Perceived_dist)\n\n#Complete Pooling by block: Single model fit to data averaged by block, by participant \nBlockSizeDistance<-aggregate(cbind(Emmert_distance_meters, Perceived_dist) ~ Actual_dist_meters + Participant, FUN = mean, data=Size_distance)\nSizeDistBlock.lm<-lm(Emmert_distance_meters~Perceived_dist , data = BlockSizeDistance)\nprint(SizeDistBlock.lm)\nsummary(SizeDistBlock.lm)\ncor.test(BlockSizeDistance$Emmert_distance_meters, BlockSizeDistance$Perceived_dist)\n\n```\n\n##### b) Figure 7\n```{r, echo = FALSE}\npar(mfrow=c(1,2), mar=c(5,4.6,4,0.5), mgp=c(3.2,0.8,0),  oma = c(0, 0, 0, 0), las = 1)\n\nplot(Emmert_distance_meters~Perceived_dist, data = Size_distance, pch = 16, \n     col=rgb(red = 0.0, green = 0.0, blue = 0.0, alpha = 0.3),\n     main = \"a) Complete Pooling: All Data\",\n     ylab = \"Emmert Distance (m)\",\n     xlab = \"Perceived Distance (m)\", \n     las = 1) \nabline(SizeDistPoolAll.lm, col = \"red\", lwd = 2)\naxis.break(axis = 1, style = \"slash\")\naxis.break(axis = 2, style = \"slash\")\n\nSizeDistBlock.lm\nplot(Emmert_distance_meters~Perceived_dist, data = BlockSizeDistance, pch = 16, \n     col=rgb(red = 0.0, green = 0.0, blue = 0.0, alpha = 0.3),\n     main = \"b) Complete Pooling: \\nAveraged by Block, by Participant\",\n     ylab = \"Emmert Distance (m)\",\n     xlab = \"Perceived Distance (m)\", \n     las = 1) \nabline(SizeDistBlock.lm, col = \"red\", lwd = 2)\naxis.break(axis = 1, style = \"slash\")\naxis.break(axis = 2, style = \"slash\")\n\ndev.copy(pdf, file=\"plots/Figure7_CompletePooling.pdf\", 9, 6)  \ndev.off()\n```  \n\n###No pooling (no overall predictor, with diff intercepts for each participant) using regression: Size and distance \n##### a)  Multiple Regression: Different intercepts for each participant, common slope \n```{r, echo = FALSE}    \n#No constant term (-1) so all participants are included \nSizeDistNoPool.lm<-lm(Emmert_distance_meters~Perceived_dist + factor(Participant) - 1, data = Size_distance)\nprint(SizeDistNoPool.lm)\nsummary(SizeDistNoPool.lm)\n\n```\n\n##### b) Figure 8\n```{r, echo = FALSE, fig.width = 8, fig.height = 8}\nsubs <- unique(Size_distance$Participant)\ncols <- gray(1:length(subs)/length(subs))\n\nplot(Emmert_distance_meters~Perceived_dist, data = Size_distance, pch = 16, \n     col=addalpha(cols[match(Size_distance$Participant, subs)], 0.65),\n     main = \"No Pooling:\\nRegression of Emmert Distance and Perceived Distance\",\n     ylab = \"Emmert Distance (m)\",\n     xlab = \"Perceived Distance\\n(m)\", \n     las = 1) \n#Unique intercept per participant, the same slope\n\npreds <- predict(SizeDistNoPool.lm)\nfor (i in 1:length(subs)){\n    subindex <- which(Size_distance$Participant == subs[i])\n    lines(Size_distance$Perceived_dist[subindex], preds[subindex], col = cols[i])\n}\n\naxis.break(axis = 1, style = \"slash\")\naxis.break(axis = 2, style = \"slash\")\n\ndev.copy(pdf, file=\"plots/Figure_8_no_pool.pdf\", 8, 8)  \ndev.off()\n```\n\n\n###9. Complete pooling of size and distance using rmcorr overall (ignoring factor levels of actual distance) \n##### a) rmcorr results\n```{r, echo=FALSE}\n#Seperate rmcorr on each actual distance (factor level)\nDistance_EmmertDist_Overall.rmc<-rmcorr(participant = Participant, measure1 = Perceived_dist, measure2 = Emmert_distance_meters, dataset = Size_distance)\nDistance_EmmertDist_Overall.rmc\n```\n\n##### b) Figure 9: rmcorr FLOP \n```{r, echo=FALSE, fig.width = 9, fig.height = 6}\npal4<-colorRampPalette(brewer.pal(9,\"Reds\"))\n\npar(cex.lab=1.2, cex.axis=1.2, cex.main=1.2, cex.sub=1.2, mar=c(6,5.5,4,3.5), oma=c(1,1,1,1), mgp = c(4, 1, 0))\nFigure8<-plot(Distance_EmmertDist_Overall.rmc, Size_distance, overall = FALSE,\n              ylab = \"Emmert Distance (m)\",\n              xlab = \"Perceived Distance\\n(m)\", las = 1, palette = pal4,\n              main = (\"Rmcorr Ignoring Factor Levels\"))\naxis.break(axis = 1, style = \"slash\")\naxis.break(axis = 2, style = \"slash\")\n\ndev.copy(pdf, file=\"plots/Figure9_FLOP_rm_overall.pdf\", 9, 6)  \ndev.off()\n\n```\n\n###10. Rmcorr with seprate models: Emmert Distance (size) and distance  \n##### a) Three separate rmcorrs\n```{r, echo=TRUE}\n\n#Subset the data first\nSize_distance_actual2<-subset(Size_distance, Actual_dist_meters==2)\nSize_distance_actual4<-subset(Size_distance, Actual_dist_meters==4)   \nSize_distance_actual6<-subset(Size_distance, Actual_dist_meters==6)\n\n#Seperate rmcorr on each actual distance (factor level)\nDistance_EmmertDist2.rmc<-rmcorr(participant = Participant, measure1 = Perceived_dist, measure2 = Emmert_distance_meters, dataset = Size_distance_actual2)\nDistance_EmmertDist2.rmc\n\nDistance_EmmertDist4.rmc<-rmcorr(participant = Participant, measure1 = Perceived_dist, \n                                 measure2 = Emmert_distance_meters, dataset = Size_distance_actual4)\nDistance_EmmertDist4.rmc\n\nDistance_EmmertDist6.rmc<-rmcorr(participant = Participant, measure1 = Perceived_dist, \n                                 measure2 = Emmert_distance_meters, dataset = Size_distance_actual6)\nDistance_EmmertDist6.rmc\n```\n\n##### b) Figure 10: Emmert Distance (size) and distance rmcorrs \n```{r, echo=FALSE, fig.width = 10, fig.height = 5}\n\npar(mfrow=c(1,3), cex.lab=1.1, cex.axis=1.1, cex.main=1.1, cex.sub = 1.1, mgp=c(3.2,0.8,0))\n#par(mfrow=c(1,3), mar=c(5,5,4,0.75), oma=c(0,2,0,0), mgp=c(3.2,0.80,0), cex.lab=1.2, cex.axis=1.1, cex.main=1.2, cex.sub=1.15)\n\nBlues<-(brewer.pal(9,'Blues'))\npal1<-colorRampPalette(Blues)\n\nOranges<-(brewer.pal(9,'Oranges'))\npal2<-colorRampPalette(Oranges)\n\nGreens<-(brewer.pal(9,'Greens'))\npal3<-colorRampPalette(Greens)\n\nplot(Distance_EmmertDist2.rmc, Size_distance_actual2, overall = FALSE,\n     ylab = \"Emmert Distance (m)\",\n     xlab = \"Perceived Distance\\n(m)\", las = 1, ylim = c(1,3), xlim = c(1,3), palette = pal1,\n     main = (\"a) Actual Distance\\n2m\"), cex = 1.2)\naxis.break(axis = 1, style = \"slash\", brw = 0.0125)\naxis.break(axis = 2, style = \"slash\", brw = 0.0125)\n\nplot(Distance_EmmertDist4.rmc, Size_distance_actual4, overall = FALSE,       \n     ylab = \"Emmert Distance (m)\",\n     xlab = \"Perceived Distance\\n(m)\", las = 1, ylim = c(2,7), xlim = c(2,6), palette = pal2,\n     main = (\"b) Actual Distance\\n4m\"), cex = 1.2)\naxis.break(axis = 1, style = \"slash\", brw = 0.0125)\naxis.break(axis = 2, style = \"slash\", brw = 0.0125)\n\nplot(Distance_EmmertDist6.rmc, Size_distance_actual6, overall = FALSE, \n     ylab = \"Emmert Distance (m)\",\n     xlab = \"Perceived Distance\\n(m)\", las = 1, ylim = c(2,11), xlim = c(3,9), palette = pal3,\n     main = (\"c) Actual Distance\\n6m\"), cex = 1.2)\naxis.break(axis = 1, style = \"slash\", brw = 0.0125)\naxis.break(axis = 2, style = \"slash\", brw = 0.0125)\n\ndev.copy(pdf, file=\"plots/Figure10_size_dist_sep.pdf\", 10, 5)     \ndev.off()  \n\n```\n\n\n###11. Forest plot of separate rmcorrs \n```{r, echo=FALSE, fig.width = 9, fig.height = 6}\n\nyi<-c(Distance_EmmertDist2.rmc$r, Distance_EmmertDist4.rmc$r, Distance_EmmertDist6.rmc$r)\nni<-rep(101, length.out = 3)\neffectlabels<-c(\"Actual Distance 2m\",\"Actual Distance 4m\", \"Actual Distance 6m\")\nDistMeta<-data.frame(cbind(effectlabels, as.numeric(yi), as.numeric(ni)))\n\n#Parametric Confidence Intervals\ndev <-escalc(ri = yi, ni = ni, measure=\"ZCOR\", method =\"REML\", data = DistMeta, append = FALSE)\ndevRE <- rma(yi, vi, data = dev)\nconfint(devRE)\nsummary(devRE)\n\nFigure7<-forest(devRE, slab = effectlabels, mlab = \"Overall (Random Effects Model)\",\n                xlab = expression(\"Repeated Measures Correlation Coefficient\"~\"(\"*italic('r'[rm])*\")\")) \ntext(-0.88, 5, \"Factor Level\", pos = 1, font = 2)\ntext(0.70, 5, expression(italic(r)[rm] ~~ \"[95% CI]\"), pos = 1, font = 2)\n\ndev.copy(pdf, file=\"plots/Figure10_Forest.pdf\", 9, 6)  \ndev.off()\n\n```\n\n###12. Multi-level modeling of size and distance data \n##### Multi-level modeling and model comparison\n```{r, echo=FALSE}\n\n#Knitting the Rmd throws errors with data = ... in lmer, even though it works fine as a script. No clue why????\n#NullModel<-lmer(Emmert_distance_meters ~  1 + (1|Participant), data = Size_distance, REML = FALSE)\n#Note actual_dist_meters has only 3 levels, very spare for random effect. Not specified as an RE here.\n\n#Clunky Rmd safe version\n#Random Int (Participant) only\nNullModel<- lmer(Size_distance$Emmert_distance_meters ~  1 + (1 | Size_distance$Participant), REML = FALSE)\n\n#Model 1: Null + fixed effect actual distance\nModel1 <- lmer(Size_distance$Emmert_distance_meters ~ Size_distance$Actual_dist_meters + \n              (1|Size_distance$Participant), \n              REML = FALSE)\n\n#Model 2: Model 1 + fixed effect perceived distance  \nModel2 <- lmer(Size_distance$Emmert_distance_meters ~ Size_distance$Actual_dist_meters + Size_distance$Perceived_dist + \n              (1|Size_distance$Participant), \n              REML = FALSE)\n\n#Model 3: Model 2 + fixed effect actual distance x  perceived dist (fully crossed)\nModel3 <- lmer(Size_distance$Emmert_distance_meters ~ Size_distance$Actual_dist_meters*Size_distance$Perceived_dist + \n              (1|Size_distance$Participant), \n              REML = FALSE)\n\n#Model X: Doesn't converge\n# ModelX <- lmer(Size_distance$Emmert_distance_meters ~ Size_distance$Actual_dist_meters*Size_distance$Perceived_dist + \n#               (1 + Size_distance$Perceived_dist|Size_distance$Participant), \n#               REML = FALSE)\n\n#Model4: Fully crossed fixed effects, RE slope for perceived dist by participant (does not converge with correlated slope)\nModel4<- lmer(Size_distance$Emmert_distance_meters ~ Size_distance$Actual_dist_meters*Size_distance$Perceived_dist + \n              (-1 + Size_distance$Perceived_dist|Size_distance$Participant) + (1|Size_distance$Participant), \n              REML = FALSE)\n\n#ModelY: Model 4 + RE int by participant (intercept ends up being zero), so it is the same as Model4 \n# ModelY<- lmer(Size_distance$Emmert_distance_meters ~ Size_distance$Actual_dist_meters*Size_distance$Perceived_dist + \n#               (-1 + Size_distance$Perceived_dist|Size_distance$Participant) + (1|Size_distance$Participant), \n#               REML = FALSE)\n\n#ModelZ: Amazing this even converges b/c actual dist has only 3 levels, not enough to be an RE. \n#Fully crossed fixed effects. RE correlated int by participants, RE slopes for perceived dist and actual dist.\n# ModelZ<- lmer(Size_distance$Emmert_distance_meters ~ Size_distance$Actual_dist_meters*Size_distance$Perceived_dist +\n#               (1 + Size_distance$Perceived_dist + Size_distance$Actual_dist_meters|Size_distance$Participant),\n#               REML = FALSE)\n\n#Model Comparison\nanova(NullModel, Model1, Model2, Model3, Model4)\n\nSizeDistModels<-list()\nSizeDistModels[1:5]<-c(NullModel, Model1, Model2, Model3, Model4)\n\nModelTable<-aictab(SizeDistModels, modnames = c(\"Null\", \"Model 1\", \"Model 2\", \"Model 3\", \"Model 4\"))\nModelTable\nevidence(ModelTable)\n\n#Pseudo R2s\nr.squaredGLMM(Model4)\n\n```\n\n##### b) Figure 12 --Graph the best fit model-- Model 4 \n```{r, echo=FALSE, fig.width = 9, fig.height = 6}\nplot(Emmert_distance_meters~Perceived_dist, data = Size_distance, type = \"n\", \n     main = \"Best Fit Multilevel Model\",\n     ylab = \"Emmert Distance (m)\",\n     xlab = \"Perceived Distance\\n(m)\", \n     las = 1) \n\ngetranges<-function(readdata) \n{\n  XYRange<<-range(readdata[\"Perceived_dist\"])\n}\n\n#Get predicted values \nPercDistModel4<-predict(Model4)\nSeqParticipant<- rep(1:20, each = 2, times = 9)\nSizeDistMod4<-cbind(SeqParticipant, Size_distance, PercDistModel4)\nSizeDistBestFit<-SizeDistMod4[order(SeqParticipant, SizeDistMod4$PercDistModel4),]\n\n#Plot OVerall (Level 2) fixed effects w/o discont\nFixedEffectsMod4<-fixef(Model4)\nSlopeFE<-FixedEffectsMod4[2]+FixedEffectsMod4[3]+FixedEffectsMod4[4]\ngetranges(SizeDistBestFit)\nablineclip(FixedEffectsMod4[1], SlopeFE, col = \"black\",  x1 = XYRange[1], \n           x2 = XYRange[2], lwd = 2)\n\n#Plot random effects\nPlotRE<- function(N, length, PredictData, cols) \n{\n  for (i in 1:N) \n  {\n    Extract<-1+(i-1)*length  #Starts at 1, then goes to 7, 13, ..., 115 \n    lines(spline(PredictData[Extract:(length*i), 6],PredictData[Extract:(length*i), 11]), col = cols[i])\n  }\n}\n\n#Plot Overall fixed effects w/discont\n#Actual distance has a mean = 4, sd = 2 \nPreds <- list()\nInts <- list()\nSlopes <- list()\n\npals <- c('Blues', 'Oranges', 'Greens')\nsubs <- unique(Size_distance$Participant)\nfor (i in 1:3){\n  \n  tempDat <- Size_distance[Size_distance$Actual_dist_meters == i*2, ]\n  cols <- addalpha(colorRampPalette(brewer.pal(9, pals[i]))(length(subs)), .6)\n  points(Emmert_distance_meters~Perceived_dist, data = tempDat, pch = 16, \n         col=cols[match(tempDat$Participant, subs)])\n  \n  Preds[[i]] <- subset(SizeDistBestFit,Actual_dist_meters == i*2)\n  Ints[[i]] <- FixedEffectsMod4[1]+FixedEffectsMod4[2]*(i*2)\n  Slopes[[i]] <- FixedEffectsMod4[3]+FixedEffectsMod4[4]*(2 * (i - 2))\n  \n  getranges(Preds[[i]])\n  ablineclip(Ints[[i]], Slopes[[i]], col = \"gray40\", lty = 2, x1 = XYRange[1]-.2, \n             x2 = XYRange[2]+.2, lwd = 2)\n  \n  PlotRE(length(subs), 6, Preds[[i]], cols)\n  \n}\n\ndev.copy(pdf, file=\"plots/Figure12_multilevel_model.pdf\", 9, 6)  \ndev.off()\n```\n\n##Appendix A: Rmcorr minus standard corr power \n\n```{r, echo=FALSE}\nk<-2\nnvals <- seq(8, 250)\npowPearsonLarge <- sapply(nvals, function (x) pwr.r.test(n=x, r=0.5)$power)\n#bluecolors<-c(\"#c6dbef\", \"#9ecae1\")\n\npar(mfrow=c(1,1), cex.lab=1.1, cex.axis=1.1, cex.main=1.2, cex.sub=1.2)\nAppendFig1<-plot(nvals, seq(0,1, length.out=length(nvals)), \n                 xlab=\"Sample Size\", yaxt = \"n\", ylab = paste(\"Power Difference:\",  \"Rmcorr (k = 2)\", \" -\", \" Pearson correlation\"), las = 1, col = \"white\", xlim=c(0,250), ylim=c(0,0.05))\nyLabels <- seq(0, 0.2, 0.01)\naxis(2, at=yLabels, labels=sprintf(round(100*yLabels), fmt=\"%2.0f%%\"), las=1, cex.sub = 2)\n\npowvals <- sapply(nvals, function (x) power.rmcorr(k[1], x, 0.5, 0.05)$power)\npowvalsdiff<-as.numeric(powvals) - as.numeric(powPearsonLarge)\nlines(nvals, powvalsdiff, lwd=2.5, col=\"red\")\n\ndev.copy(pdf, file=\"plots/AppendixA_Figure.pdf\", 9, 6) \ndev.off()\n``` \n\n## Standard Correlation Power Curve (not in paper)\n```{r, echo=FALSE}\nrs <- c(0.1, 0.3, 0.5)\nnvals <- seq(8, 1000, length.out=1000)\n\ngreenscols<-brewer.pal(9, \"Greens\")\ngreenscols3<-c(greenscols[3],greenscols[6],greenscols[9])\n\nplot(nvals, seq(0,1, length.out=length(nvals)), xlab=\"Sample Size\", ylab=\"Power\",\n     main=\"Power Curve for Standard Correlation\", type=\"n\")\nfor (i in 1:3) \n{\n  powvals <<- sapply(nvals, function (x) pwr.r.test(n=x, r=rs[i])$power)\n  lines(nvals, powvals, lwd=2.5, col=greenscols3[i])\n}\nlegend(\"bottomright\", lwd=2, col=greenscols3, legend=c(\"0.1\", \"0.3\", \"0.5\"))\nabline(a = 0.8, b=0, col=1, lty=2, lwd= 2.5)\n```\n\n##Appendix B. Separate models by factor level w/simple regression/correlation\n##### a)  Multiple Regression: Different intercepts for each participant, common slope \n```{r, echo = FALSE}    \n#Separate models for each actual dist, quasi-piecewise/segmented regression  \nBreak2<-subset(Size_distance, Actual_dist_meters == 2)\nBreak4<-subset(Size_distance, Actual_dist_meters == 4)\nBreak6<-subset(Size_distance, Actual_dist_meters == 6)\n\nSizeDistNoPoolBreak2.lm<-lm(Emmert_distance_meters~ Perceived_dist, data = Break2)\nprint(SizeDistNoPoolBreak2.lm)\nsummary(SizeDistNoPoolBreak2.lm)\ncor.test(Break2$Perceived_dist, Break2$Emmert_distance_meters)\n\nSizeDistNoPoolBreak4.lm<-lm(Emmert_distance_meters~ Perceived_dist, data = Break4)\nprint(SizeDistNoPoolBreak4.lm)\nsummary(SizeDistNoPoolBreak4.lm)\ncor.test(Break4$Perceived_dist, Break4$Emmert_distance_meters)\n\nSizeDistNoPoolBreak6.lm<-lm(Emmert_distance_meters~ Perceived_dist, data = Break6)\nprint(SizeDistNoPoolBreak6.lm)\nsummary(SizeDistNoPoolBreak6.lm)\ncor.test(Break6$Perceived_dist, Break6$Emmert_distance_meters)\n\n\nplot(Emmert_distance_meters~Perceived_dist, data = Size_distance, pch = 16,\n     col=rgb(red = 0.0, green = 0.0, blue = 0.0, alpha = 0.3),\n     main = \"Separate Regressions of Actual Distance:\\n Emmert Distance and Perceived Distance\",\n     ylab = \"Emmert Distance (m)\",\n     xlab = \"Perceived Distance\\n(m)\",\n     las = 1)\ncurve(1.5336 + 0.2851*x, add = TRUE, from = min(Break2$Perceived_dist), to = max(Break2$Perceived_dist))\ncurve(3.0811 + 0.3387*x, add = TRUE, from = min(Break4$Perceived_dist), to = max(Break4$Perceived_dist))\ncurve(5.6731 + 0.1786*x, add = TRUE, from = min(Break6$Perceived_dist), to = max(Break6$Perceived_dist))\n\ndev.copy(pdf, file=\"plots/AppendixB_Figure.pdf\", 8, 8) \ndev.off()\n```\n\n\n\n",
    "created" : 1466624242191.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3261128129",
    "id" : "CC17FE10",
    "lastKnownWriteTime" : 1466625296,
    "last_content_update" : 1466625296104,
    "path" : "C:/Users/Laura Cooper/Desktop/Need from Laptop/rmcorr package/rmcorr/Rmd/06.21.2016_rmcorr_figures.rmd",
    "project_path" : "Rmd/06.21.2016_rmcorr_figures.rmd",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}