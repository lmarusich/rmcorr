{
    "contents" : "#' Calculate the repeated measures correlation coefficient.\n#' \n#' @param participant A variable giving the subject name/id for each observation.\n#' @param measure1 A numeric variable giving the observations for one measure.\n#' @param measure2 A numeric variable giving the observations for the second measure.\n#' @param dataset The data frame containing the variables.\n#' @return A list with class \"rmc\" containing the following components.\n#' \\item{r}{the value of the repeated measures correlation coefficient.}\n#' \\item{CI}{the 95\\% confidence interval for the repeated measures correlation coefficient.}\n#' \\item{p}{the p-value for the repeated measures correlation coefficient.}\n#' @seealso \\code{\\link{rmcplot}}\n#' @examples\n#' ## Bland Altman 1995 data\n#' rmcorr(Subject, pH, PacO2, bland1995)\n#' @export\n\n\nrmcorr <- function(participant,measure1, measure2, dataset, ci = ) {\n    \n    options(contrasts = c(\"contr.sum\", \"contr.poly\"))\n    \n    args <- as.list(match.call())\n    \n    Participant <- eval(args$participant, dataset)\n    if (!is.factor(Participant)) \n    {\n        Participant <- factor(Participant)\n        warning(\"Participant coerced into a factor\")\n    }\n    \n    Measure1 <- eval(args$measure1, dataset)\n    Measure2 <- eval(args$measure2, dataset)\n    if (!is.numeric(Measure1) || !is.numeric(Measure2))\n        stop(\"'Measure 1' and 'Measure 2' must be numeric\")\n    \n    lmmodel <- lm(Measure1 ~ Participant + Measure2)\n    lmslope <- coef(lmmodel)[\"Measure2\"]\n    errordf <- lmmodel$df.residual\n    \n    # Direction of correlation based on whether slope is positive or negative  \n    corrsign <- sign(lmslope)  \n    \n    # Drop each term for Type III sums of squares\n    type3rmcorr <- drop1(lmmodel, ~., test=\"F\" )\n    SSFactor <- type3rmcorr$'Sum of Sq'[3] \n    SSresidual <- type3rmcorr$RSS[1]\n    \n    # Pvalue and effect size  \n    pvalue <- type3rmcorr$'Pr(>F)'[3] \n    rmcorrvalue <- as.numeric(corrsign * sqrt(SSFactor / (SSFactor + SSresidual)))\n    rmcorrvalueCI <- psych::r.con(rmcorrvalue, errordf)  \n    \n#     rmoutput <- data.frame(rmcorrvalue, rmcorrvalueCI[1], rmcorrvalueCI[2], pvalue)\n#     colnames(rmoutput) <- c(\"rm correlation\", \"Lower 95% CI\", \"Upper 95% CI\",\n#                           \"pvalue\")\n    rmoutput <- list(r = rmcorrvalue)\n#     rmoutput$r <- rmcorrvalue\n    rmoutput$CI <- c(rmcorrvalueCI)\n    rmoutput$p <- pvalue\n    rmoutput$model <- lmmodel\n    \n    class(rmoutput) <- \"rmc\"\n    return (rmoutput)\n} \n\n\n#' Calculate the repeated measures correlation coefficient.\n#' \n#' @param x An object of class \"rmc\", a result of a call to rmcorr.\n#' @param ... additional arguments to \\code{\\link[base]{print}}.\n#' @seealso \\code{\\link{rmcorr}}\n#' @examples\n#' ## Bland Altman 1995 data\n#' blandrmc <- rmcorr(Subject, pH, PacO2, bland1995)\n#' blandrmc\n#' @export\n\nprint.rmc <- function(x, ...) {\n    cat(\"\\nRepeated measures correlation\\n\\n\")\n    cat(\"r\\n\")\n    cat(x$r)\n    cat(\"\\n\\n95% confidence interval\\n\")\n    cat(x$CI)\n    cat(\"\\n\\np-value\\n\\n\")\n    cat(x$p)\n}   \n    \n    ",
    "created" : 1432147886169.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3155397858",
    "id" : "44118F8A",
    "lastKnownWriteTime" : 1437419474,
    "path" : "C:/Users/Laura Cooper/Desktop/Need from Laptop/rmcorr package/rmcorr/R/rmcorr.R",
    "project_path" : "R/rmcorr.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}