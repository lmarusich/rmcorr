check_rhub()
install.packages('rlang')
library(rmcorr)
?plot.rmc
examples(plot.rmc)
example(plot.rmc)
check_rhub()
check_win()
devtools::release()
check_win_devel()
devtools::release()
install.packages('revdepcheck')
library(rmcorr)
library(roxygen2)
library(rmcorr)
release()
devtools::release()
library(rmcorr)
options(contrasts)
?options
getOptions(contrasts)
getOption(contrasts)
getOption('contrasts')
?rmcorr
rmcorr(Subject, PacO2, pH, bland1995)
library(rmcorr)
rmcorr(Subject, PacO2, pH, bland1995)
getOption("contrasts")
library(rmcorr)
getOption("contrasts")
rmcorr(Subject, PacO2, pH, bland1995)
getOption("contrasts")
library(rmcorr)
rmcorr(Subject, PacO2, pH, bland1995)
getOption("contrasts")
library(rmcorr)
rmcorr(Subject, PacO2, pH, bland1995)
rmcorr(factor(Subject), PacO2, pH, bland1995)
library(rmcorr)
rmcorr(factor(Subject), PacO2, pH, bland1995)
rmcorr((Subject), PacO2, pH, bland1995)
?tinterval
?t.test
?rmcorr
getOption("contrasts")
library(rmcorr)
getOption("contrasts")
getOption("contrasts")
?options
library(rmcorr)
?rmcorr
rmcorr(Subject, PacO2, pH, bland1995)
getOption("contrasts")
debug(rmcorr)
rmcorr(Subject, PacO2, pH, bland1995)
op
getOption("contrasts")
getOption("contrasts")
library(rmcorr)
rmcorr(Subject, PacO2, pH, bland1995)
getOption("contrasts")
rmcorr(Subject, PacO2, pH, bland1995, CI.level = .95)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = .9)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = .8)
library(psych)
?r.con
library(rmcorr)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = .8)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = .9)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = .95)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = .99)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = .999)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = 1)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = "a")
rmcorr(Subject, PacO2, pH, bland1995, CI.level = 0)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = 60)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = .5)
?eval
edit(lm)
library(rmcorr)
?rmcorr
rmcorr(Subject, PacO2, pH, bland1995)
rmcorr(Subject, PacO2, pH, bland1995, CIs = "bootstrap")
rmcorr(Subject, PacO2, pH, bland1995, CIs = "bootstrap", CI.level = .9)
getOption("contrasts")
test<-function(){
var_pair=c("rt","acc")
rmcorr(sub,var_pair[1],var_pair[2],gilden2010)
}
test()
library(rmcorr)
test()
library(devtools)
devtools::document()
library(rmcorr)
?rmcorr
rmcorr(Subject, "PacO2", pH, bland1995, CIs = "bootstrap", CI.level = .9)
rmcorr(Subject, "PacO2", pH, bland1995, CI.level = .9)
a = "PacO2"
rmcorr(Subject, a, pH, bland1995, CI.level = .9)
rmcorr(Subject, a, pH, bland1995, CI.level = .95)
?install_github
library(rmcorr)
devtools::build_win()
?devtools
devtools::check_win_devel()
devtools::release()
spell_check()
devtools::spell_check()
devtools::release()
?check_rhub
devtools::check_rhub()
?plot
?rmcorr
library(rmcorr)
?rmcorr
devtools::check_rhub()
library(rmcorr)
?plot.rmc
devtools::check_rhub()
devtools::document()
devtools::check_rhub()
library(rmcorr)
?plot.rmc
devtools::release()
devtools::release()
devtools::install_github("jimhester/revdepcheck")
install.packages(c("backports", "bayestestR", "bookdown", "car", "carData", "dbplyr", "dplyr", "DT", "effectsize", "ellipsis", "emmeans", "ggeffects", "ggforce", "ggplot2", "glue", "haven", "htmlTable", "htmltools", "httpuv", "insight", "isoband", "jsonlite", "knitr", "later", "lubridate", "maptools", "merTools", "modelr", "mvtnorm", "parameters", "patchwork", "performance", "pkgload", "promises", "ps", "rmarkdown", "rversions", "scales", "shiny", "sjlabelled", "sjmisc", "sjPlot", "sp", "tidyr", "tidyselect", "tinytex", "vctrs", "xfun"))
install.packages(c("backports", "bayestestR", "bookdown", "car", "carData", "dbplyr", "dplyr", "DT", "effectsize", "ellipsis", "emmeans", "ggeffects", "ggforce", "ggplot2", "glue", "haven", "htmlTable", "htmltools", "httpuv", "insight", "isoband", "jsonlite", "knitr", "later", "lubridate", "maptools", "merTools", "modelr", "mvtnorm", "parameters", "patchwork", "performance", "pkgload", "promises", "ps", "rmarkdown", "rversions", "scales", "shiny", "sjlabelled", "sjmisc", "sjPlot", "sp", "tidyr", "tidyselect", "tinytex", "vctrs", "xfun"))
install.packages(c("backports", "bayestestR", "bookdown", "car", "carData", "dbplyr", "dplyr", "DT", "effectsize", "ellipsis", "emmeans", "ggeffects", "ggforce", "ggplot2", "glue", "haven", "htmlTable", "htmltools", "httpuv", "insight", "isoband", "jsonlite", "knitr", "later", "lubridate", "maptools", "merTools", "modelr", "mvtnorm", "parameters", "patchwork", "performance", "pkgload", "promises", "ps", "rmarkdown", "rversions", "scales", "shiny", "sjlabelled", "sjmisc", "sjPlot", "sp", "tidyr", "tidyselect", "tinytex", "vctrs", "xfun"))
install.packages(c("backports", "bayestestR", "bookdown", "car", "carData", "dbplyr", "dplyr", "DT", "effectsize", "ellipsis", "emmeans", "ggeffects", "ggforce", "ggplot2", "glue", "haven", "htmlTable", "htmltools", "httpuv", "insight", "isoband", "jsonlite", "knitr", "later", "lubridate", "maptools", "merTools", "modelr", "mvtnorm", "parameters", "patchwork", "performance", "pkgload", "promises", "ps", "rmarkdown", "rversions", "scales", "shiny", "sjlabelled", "sjmisc", "sjPlot", "sp", "tidyr", "tidyselect", "tinytex", "vctrs", "xfun"))
install.packages(c("backports", "bayestestR", "bookdown"))
install.packages(c("car", "carData", "dbplyr"))
install.packages(c("dplyr", "DT", "effectsize"))
install.packages(c("ellipsis", "emmeans", "ggeffects"))
install.packages(c("ggforce", "ggplot2", "glue", "haven"))
install.packages(c("htmlTable", "htmltools", "httpuv", "isoband"))
install.packages(c("jsonlite", "knitr", "later", "lubridate", "maptools", "merTools"))
install.packages(c("modelr", "mvtnorm", "patchwork", "performance", "pkgload"))
install.packages(c("promises", "ps", "rversions", "scales", "shiny", "sjlabelled", "sjmisc"))
install.packages(c("sjPlot", "sp", "tidyr", "tinytex"))
devtools::install_github("jimhester/revdepcheck")
devtools::install_github("r-lib/revdepcheck")
devtools::install_github("r-lib/revdepcheck")
library(revdepcheck)
?revdepcheck
revdep_check()
dbDisconnect()
devtools::release()
devtools::document()
install.packages('badgecreatr')
?badgecreatr
library(badgecreatr)
badge_cran(rmcorr)
badge_cran("rmcorr")
devtools::document()
badgeplacer()
?badgeplacer
badgeplacer(githubaccount = "lmarusich", githubrepo = "rmcorr")
badgeplacer(githubaccount = "lmarusich", githubrepo = "rmcorr", branch = "master")
devtools::document()
?document
roxygen2::roxygenize()
?badgecreatr
badge_travis(ghaccount = "lmarusich", ghrepo = "rmcorr", branch = "master")
badge_travis(ghaccount = "lmarusich", ghrepo = "rmcorr")
badge_travis(ghaccount = "lmarusich", ghrepo = "rmcorr", branch = "master")
badge_cran_downloads("rmcorr", period = "grand-total")
badge_cran_downloads("rmcorr", period = "month")
badge_cran_downloads("rmcorr", period = "last-month")
badge_cran_downloads("rmcorr")
?rmcorr
?gilden2010
?lmer
?metafor
library(metafor)
?metafor
?rmcorr
devtools::document()
?rmcorr
?ggplot
devtools::document()
?rmcorr
library(rmcorr)
?rmcorr
?rma.mv
devtools::document()
library(rmcorr)
?rmcorr
devtools::document()
?rmcorr
devtools::document()
library(rmcorr)
?rmcorr
?rmcorr
devtools::document()
library(rmcorr)
devtools::check_rhub()
devtools::check_win_devel()
devtools::release()
library(rmcorr)
devtools::revdep_check()
devtools::revdep()
install.packages('correlation')
devtools::release()
devtools::check_rhub()
devtools::release()
devtools::check_win_devel()
devtools::release()
?devtools
devtools::install_github("r-lib/revdepcheck")
library(revdepcheck)
revdep_check()
dbDisconnect()
devtools::release()
devtools::release()
library(rmcorr)
devtools::release()
?spell_check()
spell_check()
library(devtools)
spell_check()
devtools::release()
install.packages(c("afex", "backports", "bayestestR", "BH", "BiocManager", "blme", "brio", "broom", "callr", "cli", "clubSandwich", "colorspace", "correlation", "cowplot", "cpp11", "crayon", "crosstalk", "cubelyr", "data.table", "DBI", "dbplyr", "desc", "diffobj", "dplyr", "DT", "effectsize", "emmeans", "fansi", "farver", "fastmap", "forcats", "forecast", "gargle", "ggeffects", "ggforce", "ggnewscale", "ggplot2", "ggrepel", "ggridges", "ggsignif", "ggstance", "gh", "git2r", "greybox", "gridGraphics", "hexbin", "Hmisc", "hms", "htmlwidgets", "httpuv", "hunspell", "insight", "isoband", "janitor", "jsonlite", "knitr", "lamW", "lavaan", "lifecycle", "lme4", "lubridate", "magrittr", "maptools", "MatrixModels", "matrixStats", "memoise", "MetaUtility", "mime", "multcomp", "multidplyr", "optimParallel", "parameters", "patchwork", "pbkrtest", "performance", "pillar", "pivottabler", "pixmap", "pkgbuild", "pkgload", "plotly", "plotrix", "pracma", "processx", "promises", "ps", "psych", "qs", "quantmod", "quantreg", "rappdirs", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "renv", "reprex", "rio", "rmarkdown", "rprojroot", "RSQLite", "rstatix", "rstudioapi", "rvest", "sjmisc", "sjPlot", "sjstats", "slam", "smooth", "sp", "SparseM", "stringfish", "testthat", "tibble", "tidyr", "tm", "TMB", "topicmodels", "tseries", "tweenr", "usethis", "utf8", "vctrs", "VGAM", "waldo", "withr", "xfun", "XML", "yhat", "zoo"))
install.packages(c("afex", "backports", "bayestestR", "BH", "BiocManager", "blme", "brio", "broom", "callr", "cli", "clubSandwich", "colorspace", "correlation", "cowplot", "cpp11", "crayon", "crosstalk", "cubelyr", "data.table", "DBI", "dbplyr", "desc", "diffobj", "dplyr", "DT", "effectsize", "emmeans", "fansi", "farver", "fastmap", "forcats", "forecast", "gargle", "ggeffects", "ggforce", "ggnewscale", "ggplot2", "ggrepel", "ggridges", "ggsignif", "ggstance", "gh", "git2r", "greybox", "gridGraphics", "hexbin", "Hmisc", "hms", "htmlwidgets", "httpuv", "hunspell", "insight", "isoband", "janitor", "jsonlite", "knitr", "lamW", "lavaan", "lifecycle", "lme4", "lubridate", "magrittr", "maptools", "MatrixModels", "matrixStats", "memoise", "MetaUtility", "mime", "multcomp", "multidplyr", "optimParallel", "parameters", "patchwork", "pbkrtest", "performance", "pillar", "pivottabler", "pixmap", "pkgbuild", "pkgload", "plotly", "plotrix", "pracma", "processx", "promises", "ps", "psych", "qs", "quantmod", "quantreg", "rappdirs", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "renv", "reprex", "rio", "rmarkdown", "rprojroot", "RSQLite", "rstatix", "rstudioapi", "rvest", "sjmisc", "sjPlot", "sjstats", "slam", "smooth", "sp", "SparseM", "stringfish", "testthat", "tibble", "tidyr", "tm", "TMB", "topicmodels", "tseries", "tweenr", "usethis", "utf8", "vctrs", "VGAM", "waldo", "withr", "xfun", "XML", "yhat", "zoo"))
install.packages(c("afex", "backports", "bayestestR", "BH", "BiocManager", "blme", "brio", "broom", "callr", "cli", "clubSandwich", "colorspace", "correlation", "cowplot", "cpp11", "crayon", "crosstalk", "cubelyr", "data.table", "DBI", "dbplyr", "desc", "diffobj", "dplyr", "DT", "effectsize", "emmeans", "fansi", "farver", "fastmap", "forcats", "forecast", "gargle", "ggeffects", "ggforce", "ggnewscale", "ggplot2", "ggrepel", "ggridges", "ggsignif", "ggstance", "gh", "git2r", "greybox", "gridGraphics", "hexbin", "Hmisc", "hms", "htmlwidgets", "httpuv", "hunspell", "insight", "isoband", "janitor", "jsonlite", "knitr", "lamW", "lavaan", "lifecycle", "lme4", "lubridate", "magrittr", "maptools", "MatrixModels", "matrixStats", "memoise", "MetaUtility", "mime", "multcomp", "multidplyr", "optimParallel", "parameters", "patchwork", "pbkrtest", "performance", "pillar", "pivottabler", "pixmap", "pkgbuild", "pkgload", "plotly", "plotrix", "pracma", "processx", "promises", "ps", "psych", "qs", "quantmod", "quantreg", "rappdirs", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "renv", "reprex", "rio", "rmarkdown", "rprojroot", "RSQLite", "rstatix", "rstudioapi", "rvest", "sjmisc", "sjPlot", "sjstats", "slam", "smooth", "sp", "SparseM", "stringfish", "testthat", "tibble", "tidyr", "tm", "TMB", "topicmodels", "tseries", "tweenr", "usethis", "utf8", "vctrs", "VGAM", "waldo", "withr", "xfun", "XML", "yhat", "zoo"))
devtools::release()
check_rhub()
devtools::check_rhub()
?rmcorr
roxygen2
?roxygen2
roxygenize()
library(roxygen2)
roxygenize()
library(rmcorr)
?rmcorr
devtools::check_rhub()
roxygenize()
library(rmcorr)
devtools::check_rhub()
devtools::release()
check_win_devel()
devtools::check_win_devel()
round(0.70002)
round(0.70002, digits = 2)
?format
?round
devtools::release()
revdepcheck::revdep_check()
options(warn)
options('warn')
detach(rmcorr)
revdepcheck::revdep_check()
revdepcheck::revdep_reset()
devtools::release()
?dplyr
?check_rhu
?check_rhub
?devtools::check_rhub
platforms()
library(rhub)
rhub(platforms)
platforms()
devtools::check_rhub("solaris-x86-patched")
devtools::check_rhub(solaris-x86-patched)
devtools::check_rhub(platforms = "solaris-x86-patched")
devtools::build()
roxygen2::roxygenize()
?roxygenize
vignette_roclet()
roxygen2::vignette_roclet()
devtools::build_vignettes()
library(rmcorr)
devtools::check_rhub()
devtools::check_rhub()
roxygen2::roxygenize()
devtools::document()
devtools::check()
devtools::check_rhub()
devtools::check_rhub()
devtools::build_win()
library(rmcorr)
devtools::
check_win()
devtools::check_win()
devtools::check_win_devel()
devtools::check_rhub()
devtools::check_rhub()
library(rmcorr)
devtools::check()
devtools::build()
devtools::check()
usethis::use_vignette("my-vignette")
devtools::check()
usethis::use_vignette("my-vignette")
devtools::build()
devtools::check()
devtools::check_rhub()
usethis::use_build_ignore('old')
devtools::release()
spell_check()
library(devtools)
spell_check()
devtools::release()
check_win_devel()
library(rmcorr)
?rmcorr
vignette(package = "rmcorr")
devtools::release()
devtools::install_github("PsyChiLin/EFAshiny")
EFAshiny::EFAshiny()
if (interactive()) {
EFAshiny::EFAshiny()
}
?rmcorr
devtools::install_github('lmarusich/rmcorrShiny', ref = 'makepackage')
?install_github
devtools::install_github('lmarusich/rmcorrShiny', ref = 'makepackage', auth_token = '63a0b74d26fe961510d79faf539bf82c302d1d21')
rmcorrShiny::rmcorrShiny()
rmcorrShiny()
library(rmcorrShiny)
rmcorrShiny()
?rmcorrShiny
if (interactive()) {
rmcorrShiny::rmcorrShiny()
}
devtools::install_github('lmarusich/rmcorrShiny', ref = 'makepackage', auth_token = '63a0b74d26fe961510d79faf539bf82c302d1d21')
detach("package:rmcorrShiny", unload = TRUE)
devtools::install_github('lmarusich/rmcorrShiny', ref = 'makepackage', auth_token = '63a0b74d26fe961510d79faf539bf82c302d1d21')
rmcorrShiny::rmcorrShiny()
EFAshiny::EFAshiny()
rmcorrShiny::rmcorrShiny()
library(rmcorr)
devtools::release()
devtools::release()
devtools::release()
?help
?toString
debug(rmcorr)
library(rmcorr)
debug(rmcorr)
?rmcorr
rmcorr(Subject, PacO2, pH, bland1995)
args
as.character(args)
args <- as.character(args)
args
rmcorr(Subject, PacO2, pH, bland1995)
args
as.character(args)
b <- as.character(args)
b <- as.character(args[[1]])
b <- lapply(args, as.character)
warnings()
b
args
b
eval(b$participant, dataset, parent.frame())
library(rmcorr)
rmcorr(Subject, PacO2, pH, bland1995)
bland1995mod <- bland1995
bland1995mod[1,1] <- "a"
bland1995mod
rmcorr(Subject, PacO2, pH, bland1995mod)
bland1995mod[2,1] <- "a"
rmcorr(Subject, PacO2, pH, bland1995mod)
bland1995mod
bland1995mod[1:4,1] <- "a"
rmcorr(Subject, PacO2, pH, bland1995mod)
colnames_test <- c("Subject", "PacO2", "pH", "bland1995mod")
rmcorr(colnames_test[1], colnames_test[2], colnames_test[3], colnames_test[4])
rmcorr("Subject", "PacO2", "pH", bland1995mod)
rmcorr("Subject", "PacO2", "pH", "bland1995mod")
colnames(bland1995)
rmcorr(colnames(bland1995)[1], colnames(bland1995)[2], colnames(bland1995)[3], bland1995)
colnames(bland1995)[1]
debug(rmcorr)
rmcorr(colnames(bland1995)[1], colnames(bland1995)[2], colnames(bland1995)[3], bland1995)
args
rmcorr(Subject, PacO2, pH, bland1995mod)
args
eval(args$participant, dataset, parent.frame())
a <- eval(args$participant, dataset, parent.frame())
class(a)
length(a)
rmcorr("Subject", "PacO2", "pH", "bland1995mod")
args
a <- eval(args$participant, dataset, parent.frame())
eval(args$participant, dataset, parent.frame())
args
dataset
parent.frame()
args
rmcorr("Subject", "PacO2", "pH", "bland1995mod")
undebug(rmcorr)
rmcorr(Subject, PacO2, pH, bland1995mod)
debug(rmcorr)
rmcorr(Subject, PacO2, pH, bland1995mod)
args
args
Participant
dataset
rmcorr("Subject", "PacO2", "pH", bland1995mod)
args
a <-
eval(args$participant, dataset, parent.frame())
a
class(a)
length(a)
library(rmcorr)
rmcorr("Subject", "PacO2", "pH", bland1995mod)
rmcorr(Subject, PacO2, pH, bland1995mod)
rmcorr(colnames(bland1995)[1], colnames(bland1995)[2], colnames(bland1995)[3], bland1995)
rmcorr(colnames_test[1], colnames_test[2], colnames_test[3], colnames_test[4])
rmcorr(colnames_test[1], colnames_test[2], colnames_test[3], bland1995)
usethis::use_testthat()
use_test()
library(testthat)
use_test()
library(usethis)
use_test()
use_test()
devtools::test()
devtools::test()
?expect
?rmcorr
rmcorr(Subject, PacO2, pH, bland1995)
devtools::test()
devtools::test()
?context
?expect_equal
?expect_equal
devtools::test()
?expect_warning
devtools::test()
devtools::test()
devtools::test()
devtools::test()
bland1995
rmc.out
rmcorr(Subject, PacO2, pH, bland1995)
a <- rmcorr(Subject, PacO2, pH, bland1995)
a$CI
b <- a$CI
devtools::test()
?expect_warning
devtools::test()
rmcorr(as.factor(Subject), PacO2, pH, bland1995mod)
devtools::test()
rmcorr(Subject, as.character(PacO2), pH, bland1995)
bland1995
bland1995a <- bland1995
bland1995a$pH <- as.character(bland1995a$pH)
bland1995a
str(bland1995a)
rmcorr(Subject, PacO2, pH, bland1995a)
debug(rmcorr)
rmcorr(Subject, PacO2, pH, bland1995a)
Measure1
args
Measure2
class(Measure2)
library(rmcorr)
rmcorr(Subject, PacO2, pH, bland1995a)
devtools::test()
?rmcorr
?gilden2010
rmcorr(sub, rt, acc, gilden2010, CIs = "bootstrap")
rmc.out <- rmcorr(sub, rt, acc, gilden2010, CIs = "bootstrap")
rmc.out
rmc.out$CI
rmc.out$CI[1]
str(rmc.out$CI.level)
str(rmc.out$CI)
str(rmc.out$CI[1])
str(rmc.out$CI[[1]])
set.seed(1212)
devtools::release()
check_rhub()
?devtools
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages(c("ade4", "afex", "arm", "backports", "bayestestR", "bbmle", "BDgraph", "beeswarm", "berryFunctions", "BiocManager", "bitops", "blob", "bookdown", "bootnet", "brio", "broom", "broom.mixed", "bslib", "cachem", "callr", "candisc", "car", "colorspace", "conquer", "corpcor", "correlation", "corrplot", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "dbplyr", "desc", "diffobj", "digest", "dplyr", "DT", "e1071", "effectsize", "ellipsis", "emmeans", "fansi", "fdrtool", "forecast", "fs", "gargle", "generics", "gert", "ggeffects", "ggplot2", "ggplotify", "ggsignif", "gh", "git2r", "glmmTMB", "glmnet", "glue", "gmailr", "graphicalVAR", "graphlayouts", "greybox", "gsl", "gtools", "haven", "heplots", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "huge", "igraph", "insight", "irrNA", "isoband", "jpeg", "jquerylib", "knitr", "lamW", "later", "lavaan", "lcc", "lifecycle", "lme4", "lmtest", "lubridate", "maps", "maptools", "matrixcalc", "matrixStats", "MBESS", "memoise", "MetaUtility", "mgm", "mice", "mime", "multcomp", "mvtnorm", "NetworkToolbox", "networktools", "ngram", "nloptr", "OpenMx", "openssl", "openxlsx", "optimx", "packrat", "pals", "pander", "parameters", "parsedate", "pbapply", "performance", "piggyback", "pillar", "pivottabler", "pkgbuild", "plotly", "plotrix", "processx", "proxy", "psych", "psychTools", "qgraph", "qs", "quantreg", "R.utils", "raster", "rcmdcheck", "Rcpp", "RcppArmadillo", "RcppParallel", "RCurl", "readr", "relaimpo", "renv", "reprex", "rex", "rio", "rlang", "rmarkdown", "rngtools", "robustbase", "robustlmm", "roxygen2", "rpf", "rsconnect", "RSQLite", "rticles", "rvcheck", "rversions", "rvest", "sandwich", "sass", "scholar", "sem", "semTools", "sessioninfo", "shiny", "shinydashboard", "shinytest", "shinyWidgets", "sjlabelled", "sjmisc", "sjPlot", "slam", "smacof", "smooth", "snow", "sp", "statmod", "stringdist", "stringfish", "stringi", "survey", "systemfonts", "testthat", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tis", "TMB", "tseries", "unmarked", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "waldo", "weights", "withr", "xfun", "XML", "xml2", "zip"))
install.packages(c("ade4", "afex", "arm", "backports", "bayestestR", "bbmle", "BDgraph", "beeswarm", "berryFunctions", "BiocManager", "bitops", "blob", "bookdown", "bootnet", "brio", "broom", "broom.mixed", "bslib", "cachem", "callr", "candisc", "car", "colorspace", "conquer", "corpcor", "correlation", "corrplot", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "dbplyr", "desc", "diffobj", "digest", "dplyr", "DT", "e1071", "effectsize", "ellipsis", "emmeans", "fansi", "fdrtool", "forecast", "fs", "gargle", "generics", "gert", "ggeffects", "ggplot2", "ggplotify", "ggsignif", "gh", "git2r", "glmmTMB", "glmnet", "glue", "gmailr", "graphicalVAR", "graphlayouts", "greybox", "gsl", "gtools", "haven", "heplots", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "huge", "igraph", "insight", "irrNA", "isoband", "jpeg", "jquerylib", "knitr", "lamW", "later", "lavaan", "lcc", "lifecycle", "lme4", "lmtest", "lubridate", "maps", "maptools", "matrixcalc", "matrixStats", "MBESS", "memoise", "MetaUtility", "mgm", "mice", "mime", "multcomp", "mvtnorm", "NetworkToolbox", "networktools", "ngram", "nloptr", "OpenMx", "openssl", "openxlsx", "optimx", "packrat", "pals", "pander", "parameters", "parsedate", "pbapply", "performance", "piggyback", "pillar", "pivottabler", "pkgbuild", "plotly", "plotrix", "processx", "proxy", "psych", "psychTools", "qgraph", "qs", "quantreg", "R.utils", "raster", "rcmdcheck", "Rcpp", "RcppArmadillo", "RcppParallel", "RCurl", "readr", "relaimpo", "renv", "reprex", "rex", "rio", "rlang", "rmarkdown", "rngtools", "robustbase", "robustlmm", "roxygen2", "rpf", "rsconnect", "RSQLite", "rticles", "rvcheck", "rversions", "rvest", "sandwich", "sass", "scholar", "sem", "semTools", "sessioninfo", "shiny", "shinydashboard", "shinytest", "shinyWidgets", "sjlabelled", "sjmisc", "sjPlot", "slam", "smacof", "smooth", "snow", "sp", "statmod", "stringdist", "stringfish", "stringi", "survey", "systemfonts", "testthat", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tis", "TMB", "tseries", "unmarked", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "waldo", "weights", "withr", "xfun", "XML", "xml2", "zip"))
install.packages(c("ade4", "afex", "arm", "backports", "bayestestR", "bbmle", "BDgraph", "beeswarm", "berryFunctions", "BiocManager", "bitops", "blob", "bookdown", "bootnet", "brio", "broom", "broom.mixed", "bslib", "cachem", "callr", "candisc", "car", "colorspace", "conquer", "corpcor", "correlation", "corrplot", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "dbplyr", "desc", "diffobj", "digest", "dplyr", "DT", "e1071", "effectsize", "ellipsis", "emmeans", "fansi", "fdrtool", "forecast", "fs", "gargle", "generics", "gert", "ggeffects", "ggplot2", "ggplotify", "ggsignif", "gh", "git2r", "glmmTMB", "glmnet", "glue", "gmailr", "graphicalVAR", "graphlayouts", "greybox", "gsl", "gtools", "haven", "heplots", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "huge", "igraph", "insight", "irrNA", "isoband", "jpeg", "jquerylib", "knitr", "lamW", "later", "lavaan", "lcc", "lifecycle", "lme4", "lmtest", "lubridate", "maps", "maptools", "matrixcalc", "matrixStats", "MBESS", "memoise", "MetaUtility", "mgm", "mice", "mime", "multcomp", "mvtnorm", "NetworkToolbox", "networktools", "ngram", "nloptr", "OpenMx", "openssl", "openxlsx", "optimx", "packrat", "pals", "pander", "parameters", "parsedate", "pbapply", "performance", "piggyback", "pillar", "pivottabler", "pkgbuild", "plotly", "plotrix", "processx", "proxy", "psych", "psychTools", "qgraph", "qs", "quantreg", "R.utils", "raster", "rcmdcheck", "Rcpp", "RcppArmadillo", "RcppParallel", "RCurl", "readr", "relaimpo", "renv", "reprex", "rex", "rio", "rlang", "rmarkdown", "rngtools", "robustbase", "robustlmm", "roxygen2", "rpf", "rsconnect", "RSQLite", "rticles", "rvcheck", "rversions", "rvest", "sandwich", "sass", "scholar", "sem", "semTools", "sessioninfo", "shiny", "shinydashboard", "shinytest", "shinyWidgets", "sjlabelled", "sjmisc", "sjPlot", "slam", "smacof", "smooth", "snow", "sp", "statmod", "stringdist", "stringfish", "stringi", "survey", "systemfonts", "testthat", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tis", "TMB", "tseries", "unmarked", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "waldo", "weights", "withr", "xfun", "XML", "xml2", "zip"))
install.packages(c("lme4", "nloptr", "Rcpp", "statmod"))
install.packages(c("lme4", "nloptr", "Rcpp", "statmod"))
install.packages("lme4")
install.packages('lme4')
library(rmcorr)
devtools::check_rhub()
devtools::release()
devtools::check_win_devel()
devtools::release()
install.packages('rmcorr')
install.packages("rmcorr")
install.packages("rmcorr")
library(devtools)
detach("package:devtools", unload = TRUE)
install.packages('devtools')
library(devtools)
?check
run_examples()
Sys.setenv(_R_CHECK_DEPENDS_ONLY_=true)
?Sys.setenv
usethis::edit_r_environ()
usethis::edit_r_environ('rmcorr')
usethis::edit_r_environ('rmcorr.Rproj')
?edit_r_environ
usethis::edit_r_environ('project')
