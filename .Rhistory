?rmcorr
rmcorr(Subject, PacO2, pH, bland1995)
rmcorr("Subject", PacO2, pH, bland1995)
rmcorr("Subject", bland1995$PacO2, pH, bland1995)
a <- "pH"
rmcorr("Subject", bland1995$PacO2, a, bland1995)
testrmc <- rmcorr("Subject", bland1995$PacO2, a, bland1995)
plot(testrmc)
library(rmcorr)
?plot.rmc
?rmcorr
?lm
?rmcorr
example(plot.rmc)
library(rmcorr)
example(plot.rmc)
library(rmcorr)
example(plot.rmc)
library(ggplot2)
example(plot.rmc)
library(rmcorr)
library(ggplot2)
example(plot.rmc)
library(rmcorr)
library(ggplot2)
example(plot.rmc)
library(rmcorr)
library(ggplot2)
example(plot.rmc)
library(rmcorr)
library(ggplot2)
example(plot.rmc)
bland1995
bland1995$pH
max(bland1995$pH)
?plot.rmc
?lm
?metafor
?aov
?glm
library(rmcorr)
library(ggplot2)
example(plot.rmcv)
example(plot.rmc)
library(rmcorr)
library(ggplot2)
example(plot.rmc)
?plot.rmc
library(rmcorr)
?plot.rmc
library(rmcorr)
?plot.rmc
my.rmc <- rmcorr(bland1995$Subject, bland1995$PacO2, pH, dataset = bland199)
my.rmc <- rmcorr(bland1995$Subject, bland1995$PacO2, pH, dataset = bland1995)
plot(my.rmc)
plot(my.rmc)
plot(my.rmc)
library(rmcorr)
require(pwr)
require(psych)
require(RColorBrewer)
require(plotrix)
require(rmcorr)
require(lme4)
# require(AICcmodavg)
require(ggplot2)
require(merTools)
addalpha <- function(colors, alpha=1.0) {
r <- col2rgb(colors, alpha=T)
# Apply alpha
r[4,] <- alpha*255
r <- r/255.0
return(rgb(r[1,], r[2,], r[3,], r[4,]))
}
# colorRampPaletteAlpha()
colorRampPaletteAlpha <- function(colors, n=32, interpolate='linear') {
# Create the color ramp normally
cr <- colorRampPalette(colors, interpolate=interpolate)(n)
# Find the alpha channel
a <- col2rgb(colors, alpha=T)[4,]
# Interpolate
if (interpolate=='linear') {
l <- approx(a, n=n)
} else {
l <- spline(a, n=n)
}
l$y[l$y > 255] <- 255 # Clamp if spline is > 255
cr <- addalpha(cr, l$y/255.0)
return(cr)
}
?rmcorr
set.seed(1)
initX <- rnorm(50)
newY <- NULL
newX <- NULL
sub <- rep(1:10, each = 5)
rsq <- .9
addx <- -2
for (i in 1:10){
addx <- addx + .25
tempData <- initX[sub == i] + addx
sdx <- sd(tempData)
sdnoise <- sdx * (sqrt((1-rsq)/rsq))
tempy <- tempData + rnorm(5,0,sdnoise) + rnorm(1,0,3)
newY <- c(newY, tempy)
newX <- c(newX,tempData)
}
exampleMat <-data.frame(cbind(sub,newX,newY))
example.rmc <- rmcorr(sub,newX,newY,exampleMat)
rmcorr(sub, newX, newY, exampleMat)
?rmcorr
devtools::use_vignette("Combined_paper_figures")
devtools::use_vignette("Paper_figures")
devtools::build()
install.packages(c("devtools", "rmarkdown", "yaml"))
?roxygen
?roxygen2
devtools::document()
devtools::document()
devtools::document()
library(rmcorr)
roxygenise()
roxygenize()
library(roxygen2)
roxygenize()
roxygenize()
library(rmcorr)
roxygenize()
library(rmcorr)
?aes
?plot.rmc
library(rmcorr)
library(rmcorr)
?plot.rmc
?check
devtools::check("stats")
devtools::check(stats)
devtools::check(as.package(stats))
library(devtools)
devtools::check(as.package(stats))
devtools::check(as.package('stats'))
library(stats)
devtools::check(stats)
devtools::check("stats")
revdep_check()
revdep_check()
library(devtools)
revdep_check()
revdep_check_reset()
revdep_check()
revdep_check_summary()
revdep_check_print_problems()
?warn
library(rmcorr)
?plot.rmc
my.rmc <- rmcorr(participant = Subject, measure1 = PacO2, measure2 = pH, dataset = bland1995)
plot(my.rmc)
plot(my.rmc, dataset= bland1995)
warnings()
library(rmcorr)
plot(my.rmc)
warnings()
plot(my.rmc)
my.rmc <- rmcorr(participant = Subject, measure1 = PacO2, measure2 = pH, dataset = bland1995)
plot(my.rmc)
plot(my.rmc, dataset = bland1995)
plot(my.rmc, bland1995)
plot(my.rmc, bland1995, overall = T)
plot(my.rmc, overall = T)
plot(my.rmc, T)
?plot.rmc
library(rmcorr)
my.rmc <- rmcorr(participant = Subject, measure1 = PacO2, measure2 = pH, dataset = bland1995)
plot(my.rmc)
plot(my.rmc, dataset = bland1995)
plot(my.rmc, bland1995)
?install_github
library(rmcorr)
?plot.rmc
my.rmc
plot(my.rmc)
plot(my.rmc, bland1995)
plot(my.rmc, T)
?build_win
devtooll::build_win()
devtools::build_win()
devtools::use_news_md()
devtools::use_readme_md()
devtools::use_readme_rmd()
devtools::use_news_rmd
devtools::use_news_rmd()
?rmcorr
my.rmc <- rmcorr(participant = Subject, measure1 = PacO2, measure2 = "pH", dataset = bland1995)
my.rmc
library(rmcorr)
devtools::release()
library(rmcorr)
devtools::release()
install.packages(c("backports", "BH", "broom", "callr", "commonmark", "curl", "dbplyr", "digest", "DT", "forcats", "git2r", "haven", "hms", "htmlwidgets", "hunspell", "irlba", "knitr", "lazyeval", "lme4", "lubridate", "mvtnorm", "openssl", "pillar", "plotrix", "raster", "Rcpp", "RcppEigen", "reprex", "reshape2", "rJava", "rlang", "rprojroot", "scales", "shiny", "sjlabelled", "sjmisc", "sp", "stringi", "stringr", "tibble", "tidyr", "tidyselect", "VGAM", "withr", "xml2", "zoo"))
install.packages(c("backports", "BH", "broom", "callr", "commonmark", "curl", "dbplyr", "digest", "DT", "forcats", "git2r", "haven", "hms", "htmlwidgets", "hunspell", "irlba", "knitr", "lazyeval", "lme4", "lubridate", "mvtnorm", "openssl", "pillar", "plotrix", "raster", "Rcpp", "RcppEigen", "reprex", "reshape2", "rJava", "rlang", "rprojroot", "scales", "shiny", "sjlabelled", "sjmisc", "sp", "stringi", "stringr", "tibble", "tidyr", "tidyselect", "VGAM", "withr", "xml2", "zoo"))
install.packages(c("backports", "BH", "broom", "callr", "commonmark", "curl", "dbplyr", "digest", "DT", "forcats", "git2r", "haven", "hms", "htmlwidgets", "hunspell", "irlba", "knitr", "lazyeval", "lme4", "lubridate", "mvtnorm", "openssl", "pillar", "plotrix", "raster", "Rcpp", "RcppEigen", "reprex", "reshape2", "rJava", "rlang", "rprojroot", "scales", "shiny", "sjlabelled", "sjmisc", "sp", "stringi", "stringr", "tibble", "tidyr", "tidyselect", "VGAM", "withr", "xml2", "zoo"))
devtools::release()
devtools::release()
install.packages("git2r", type = "source")
install.packages("git2r", type = "source")
library(git2r)
library(devtools)
devtools::release()
library("rversions", lib.loc="~/R/win-library/3.4")
install.packages('lme4')
devtools::release()
devtools::release()
install.packages('curl')
install.packages('httr')
devtools::release()
install.packages('dplyr')
library(rmcorr)
devtools::release()
library(installr)
install.package('installr')
install.packages('installr')
library(installr)
install.pandoc()
devtools::release()
Sys.which("pdflatex")
Sys.getenv("PATH")
sessionInfo()
Sys.which("pdflatex")
Sys.getenv("PATH")
Sys.which("pdflatex")
Sys.getenv("PATH")
library(rmcorr)
devtools::release()
Sys.which('pdflatex')
Sys.getenv("PATH")
Sys.which('pdflatex')
Sys.which('pdflatex')
library(rmcorr)
devtools::release()
?raz2005
devtools::release()
?plot.rmc
library(rmcorr)
install.packages('rmcorr')
library(rmcorr)
?plot.rmc
?dev.copy
install.packages('merTools')
devtools::revdep_check()
library(devtools)
devtools::revdep_check()
?revdep
install.packages('revdepcheck')
devtools::release()
spell_check(())
spell_check()
devtools::release()
check_rhub()
install.packages('rlang')
library(rmcorr)
?plot.rmc
examples(plot.rmc)
example(plot.rmc)
check_rhub()
check_win()
devtools::release()
check_win_devel()
devtools::release()
install.packages('revdepcheck')
library(rmcorr)
library(roxygen2)
library(rmcorr)
release()
devtools::release()
library(rmcorr)
options(contrasts)
?options
getOptions(contrasts)
getOption(contrasts)
getOption('contrasts')
?rmcorr
rmcorr(Subject, PacO2, pH, bland1995)
library(rmcorr)
rmcorr(Subject, PacO2, pH, bland1995)
getOption("contrasts")
library(rmcorr)
getOption("contrasts")
rmcorr(Subject, PacO2, pH, bland1995)
getOption("contrasts")
library(rmcorr)
rmcorr(Subject, PacO2, pH, bland1995)
getOption("contrasts")
library(rmcorr)
rmcorr(Subject, PacO2, pH, bland1995)
rmcorr(factor(Subject), PacO2, pH, bland1995)
library(rmcorr)
rmcorr(factor(Subject), PacO2, pH, bland1995)
rmcorr((Subject), PacO2, pH, bland1995)
?tinterval
?t.test
?rmcorr
getOption("contrasts")
library(rmcorr)
getOption("contrasts")
getOption("contrasts")
?options
library(rmcorr)
?rmcorr
rmcorr(Subject, PacO2, pH, bland1995)
getOption("contrasts")
debug(rmcorr)
rmcorr(Subject, PacO2, pH, bland1995)
op
getOption("contrasts")
getOption("contrasts")
library(rmcorr)
rmcorr(Subject, PacO2, pH, bland1995)
getOption("contrasts")
rmcorr(Subject, PacO2, pH, bland1995, CI.level = .95)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = .9)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = .8)
library(psych)
?r.con
library(rmcorr)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = .8)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = .9)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = .95)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = .99)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = .999)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = 1)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = "a")
rmcorr(Subject, PacO2, pH, bland1995, CI.level = 0)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = 60)
rmcorr(Subject, PacO2, pH, bland1995, CI.level = .5)
?eval
edit(lm)
library(rmcorr)
?rmcorr
rmcorr(Subject, PacO2, pH, bland1995)
rmcorr(Subject, PacO2, pH, bland1995, CIs = "bootstrap")
rmcorr(Subject, PacO2, pH, bland1995, CIs = "bootstrap", CI.level = .9)
getOption("contrasts")
test<-function(){
var_pair=c("rt","acc")
rmcorr(sub,var_pair[1],var_pair[2],gilden2010)
}
test()
library(rmcorr)
test()
library(devtools)
devtools::document()
library(rmcorr)
?rmcorr
rmcorr(Subject, "PacO2", pH, bland1995, CIs = "bootstrap", CI.level = .9)
rmcorr(Subject, "PacO2", pH, bland1995, CI.level = .9)
a = "PacO2"
rmcorr(Subject, a, pH, bland1995, CI.level = .9)
rmcorr(Subject, a, pH, bland1995, CI.level = .95)
?install_github
library(rmcorr)
devtools::build_win()
?devtools
devtools::check_win_devel()
devtools::release()
spell_check()
devtools::spell_check()
devtools::release()
?check_rhub
devtools::check_rhub()
?plot
?rmcorr
library(rmcorr)
?rmcorr
devtools::check_rhub()
library(rmcorr)
?plot.rmc
devtools::check_rhub()
devtools::document()
devtools::check_rhub()
library(rmcorr)
?plot.rmc
devtools::release()
devtools::release()
devtools::install_github("jimhester/revdepcheck")
install.packages(c("backports", "bayestestR", "bookdown", "car", "carData", "dbplyr", "dplyr", "DT", "effectsize", "ellipsis", "emmeans", "ggeffects", "ggforce", "ggplot2", "glue", "haven", "htmlTable", "htmltools", "httpuv", "insight", "isoband", "jsonlite", "knitr", "later", "lubridate", "maptools", "merTools", "modelr", "mvtnorm", "parameters", "patchwork", "performance", "pkgload", "promises", "ps", "rmarkdown", "rversions", "scales", "shiny", "sjlabelled", "sjmisc", "sjPlot", "sp", "tidyr", "tidyselect", "tinytex", "vctrs", "xfun"))
install.packages(c("backports", "bayestestR", "bookdown", "car", "carData", "dbplyr", "dplyr", "DT", "effectsize", "ellipsis", "emmeans", "ggeffects", "ggforce", "ggplot2", "glue", "haven", "htmlTable", "htmltools", "httpuv", "insight", "isoband", "jsonlite", "knitr", "later", "lubridate", "maptools", "merTools", "modelr", "mvtnorm", "parameters", "patchwork", "performance", "pkgload", "promises", "ps", "rmarkdown", "rversions", "scales", "shiny", "sjlabelled", "sjmisc", "sjPlot", "sp", "tidyr", "tidyselect", "tinytex", "vctrs", "xfun"))
install.packages(c("backports", "bayestestR", "bookdown", "car", "carData", "dbplyr", "dplyr", "DT", "effectsize", "ellipsis", "emmeans", "ggeffects", "ggforce", "ggplot2", "glue", "haven", "htmlTable", "htmltools", "httpuv", "insight", "isoband", "jsonlite", "knitr", "later", "lubridate", "maptools", "merTools", "modelr", "mvtnorm", "parameters", "patchwork", "performance", "pkgload", "promises", "ps", "rmarkdown", "rversions", "scales", "shiny", "sjlabelled", "sjmisc", "sjPlot", "sp", "tidyr", "tidyselect", "tinytex", "vctrs", "xfun"))
install.packages(c("backports", "bayestestR", "bookdown", "car", "carData", "dbplyr", "dplyr", "DT", "effectsize", "ellipsis", "emmeans", "ggeffects", "ggforce", "ggplot2", "glue", "haven", "htmlTable", "htmltools", "httpuv", "insight", "isoband", "jsonlite", "knitr", "later", "lubridate", "maptools", "merTools", "modelr", "mvtnorm", "parameters", "patchwork", "performance", "pkgload", "promises", "ps", "rmarkdown", "rversions", "scales", "shiny", "sjlabelled", "sjmisc", "sjPlot", "sp", "tidyr", "tidyselect", "tinytex", "vctrs", "xfun"))
install.packages(c("backports", "bayestestR", "bookdown"))
install.packages(c("car", "carData", "dbplyr"))
install.packages(c("dplyr", "DT", "effectsize"))
install.packages(c("ellipsis", "emmeans", "ggeffects"))
install.packages(c("ggforce", "ggplot2", "glue", "haven"))
install.packages(c("htmlTable", "htmltools", "httpuv", "isoband"))
install.packages(c("jsonlite", "knitr", "later", "lubridate", "maptools", "merTools"))
install.packages(c("modelr", "mvtnorm", "patchwork", "performance", "pkgload"))
install.packages(c("promises", "ps", "rversions", "scales", "shiny", "sjlabelled", "sjmisc"))
install.packages(c("sjPlot", "sp", "tidyr", "tinytex"))
devtools::install_github("jimhester/revdepcheck")
devtools::install_github("r-lib/revdepcheck")
devtools::install_github("r-lib/revdepcheck")
library(revdepcheck)
?revdepcheck
revdep_check()
dbDisconnect()
devtools::release()
devtools::document()
install.packages('badgecreatr')
?badgecreatr
library(badgecreatr)
badge_cran(rmcorr)
badge_cran("rmcorr")
devtools::document()
badgeplacer()
?badgeplacer
badgeplacer(githubaccount = "lmarusich", githubrepo = "rmcorr")
badgeplacer(githubaccount = "lmarusich", githubrepo = "rmcorr", branch = "master")
devtools::document()
?document
roxygen2::roxygenize()
?badgecreatr
badge_travis(ghaccount = "lmarusich", ghrepo = "rmcorr", branch = "master")
badge_travis(ghaccount = "lmarusich", ghrepo = "rmcorr")
badge_travis(ghaccount = "lmarusich", ghrepo = "rmcorr", branch = "master")
badge_cran_downloads("rmcorr", period = "grand-total")
badge_cran_downloads("rmcorr", period = "month")
badge_cran_downloads("rmcorr", period = "last-month")
badge_cran_downloads("rmcorr")
?rmcorr
?gilden2010
?lmer
?metafor
library(metafor)
?metafor
?rmcorr
devtools::document()
?rmcorr
?ggplot
devtools::document()
?rmcorr
library(rmcorr)
?rmcorr
?rma.mv
devtools::document()
library(rmcorr)
?rmcorr
devtools::document()
?rmcorr
devtools::document()
library(rmcorr)
?rmcorr
?rmcorr
devtools::document()
library(rmcorr)
devtools::check_rhub()
devtools::check_win_devel()
devtools::release()
library(rmcorr)
devtools::revdep_check()
devtools::revdep()
install.packages('correlation')
devtools::release()
devtools::check_rhub()
devtools::release()
devtools::check_win_devel()
devtools::release()
?devtools
devtools::install_github("r-lib/revdepcheck")
library(revdepcheck)
revdep_check()
dbDisconnect()
devtools::release()
devtools::release()
library(rmcorr)
devtools::release()
?spell_check()
spell_check()
library(devtools)
spell_check()
devtools::release()
install.packages(c("afex", "backports", "bayestestR", "BH", "BiocManager", "blme", "brio", "broom", "callr", "cli", "clubSandwich", "colorspace", "correlation", "cowplot", "cpp11", "crayon", "crosstalk", "cubelyr", "data.table", "DBI", "dbplyr", "desc", "diffobj", "dplyr", "DT", "effectsize", "emmeans", "fansi", "farver", "fastmap", "forcats", "forecast", "gargle", "ggeffects", "ggforce", "ggnewscale", "ggplot2", "ggrepel", "ggridges", "ggsignif", "ggstance", "gh", "git2r", "greybox", "gridGraphics", "hexbin", "Hmisc", "hms", "htmlwidgets", "httpuv", "hunspell", "insight", "isoband", "janitor", "jsonlite", "knitr", "lamW", "lavaan", "lifecycle", "lme4", "lubridate", "magrittr", "maptools", "MatrixModels", "matrixStats", "memoise", "MetaUtility", "mime", "multcomp", "multidplyr", "optimParallel", "parameters", "patchwork", "pbkrtest", "performance", "pillar", "pivottabler", "pixmap", "pkgbuild", "pkgload", "plotly", "plotrix", "pracma", "processx", "promises", "ps", "psych", "qs", "quantmod", "quantreg", "rappdirs", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "renv", "reprex", "rio", "rmarkdown", "rprojroot", "RSQLite", "rstatix", "rstudioapi", "rvest", "sjmisc", "sjPlot", "sjstats", "slam", "smooth", "sp", "SparseM", "stringfish", "testthat", "tibble", "tidyr", "tm", "TMB", "topicmodels", "tseries", "tweenr", "usethis", "utf8", "vctrs", "VGAM", "waldo", "withr", "xfun", "XML", "yhat", "zoo"))
install.packages(c("afex", "backports", "bayestestR", "BH", "BiocManager", "blme", "brio", "broom", "callr", "cli", "clubSandwich", "colorspace", "correlation", "cowplot", "cpp11", "crayon", "crosstalk", "cubelyr", "data.table", "DBI", "dbplyr", "desc", "diffobj", "dplyr", "DT", "effectsize", "emmeans", "fansi", "farver", "fastmap", "forcats", "forecast", "gargle", "ggeffects", "ggforce", "ggnewscale", "ggplot2", "ggrepel", "ggridges", "ggsignif", "ggstance", "gh", "git2r", "greybox", "gridGraphics", "hexbin", "Hmisc", "hms", "htmlwidgets", "httpuv", "hunspell", "insight", "isoband", "janitor", "jsonlite", "knitr", "lamW", "lavaan", "lifecycle", "lme4", "lubridate", "magrittr", "maptools", "MatrixModels", "matrixStats", "memoise", "MetaUtility", "mime", "multcomp", "multidplyr", "optimParallel", "parameters", "patchwork", "pbkrtest", "performance", "pillar", "pivottabler", "pixmap", "pkgbuild", "pkgload", "plotly", "plotrix", "pracma", "processx", "promises", "ps", "psych", "qs", "quantmod", "quantreg", "rappdirs", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "renv", "reprex", "rio", "rmarkdown", "rprojroot", "RSQLite", "rstatix", "rstudioapi", "rvest", "sjmisc", "sjPlot", "sjstats", "slam", "smooth", "sp", "SparseM", "stringfish", "testthat", "tibble", "tidyr", "tm", "TMB", "topicmodels", "tseries", "tweenr", "usethis", "utf8", "vctrs", "VGAM", "waldo", "withr", "xfun", "XML", "yhat", "zoo"))
install.packages(c("afex", "backports", "bayestestR", "BH", "BiocManager", "blme", "brio", "broom", "callr", "cli", "clubSandwich", "colorspace", "correlation", "cowplot", "cpp11", "crayon", "crosstalk", "cubelyr", "data.table", "DBI", "dbplyr", "desc", "diffobj", "dplyr", "DT", "effectsize", "emmeans", "fansi", "farver", "fastmap", "forcats", "forecast", "gargle", "ggeffects", "ggforce", "ggnewscale", "ggplot2", "ggrepel", "ggridges", "ggsignif", "ggstance", "gh", "git2r", "greybox", "gridGraphics", "hexbin", "Hmisc", "hms", "htmlwidgets", "httpuv", "hunspell", "insight", "isoband", "janitor", "jsonlite", "knitr", "lamW", "lavaan", "lifecycle", "lme4", "lubridate", "magrittr", "maptools", "MatrixModels", "matrixStats", "memoise", "MetaUtility", "mime", "multcomp", "multidplyr", "optimParallel", "parameters", "patchwork", "pbkrtest", "performance", "pillar", "pivottabler", "pixmap", "pkgbuild", "pkgload", "plotly", "plotrix", "pracma", "processx", "promises", "ps", "psych", "qs", "quantmod", "quantreg", "rappdirs", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "renv", "reprex", "rio", "rmarkdown", "rprojroot", "RSQLite", "rstatix", "rstudioapi", "rvest", "sjmisc", "sjPlot", "sjstats", "slam", "smooth", "sp", "SparseM", "stringfish", "testthat", "tibble", "tidyr", "tm", "TMB", "topicmodels", "tseries", "tweenr", "usethis", "utf8", "vctrs", "VGAM", "waldo", "withr", "xfun", "XML", "yhat", "zoo"))
devtools::release()
check_rhub()
devtools::check_rhub()
?rmcorr
roxygen2
?roxygen2
roxygenize()
library(roxygen2)
roxygenize()
library(rmcorr)
?rmcorr
devtools::check_rhub()
roxygenize()
library(rmcorr)
devtools::check_rhub()
devtools::release()
check_win_devel()
devtools::check_win_devel()
round(0.70002)
round(0.70002, digits = 2)
?format
?round
devtools::release()
revdepcheck::revdep_check()
options(warn)
options('warn')
detach(rmcorr)
revdepcheck::revdep_check()
revdepcheck::revdep_reset()
